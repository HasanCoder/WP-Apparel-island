[{"F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\index.js":"1","F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\Store.js":"2","F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\App.js":"3","F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\Order.js":"4","F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\Dashboard.js":"5","F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\Login.js":"6","F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\actions\\types.js":"7","F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\TimelineItem.js":"8","F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\actions\\axios.js":"9","F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\NavItem.js":"10","F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\Forum.js":"11","F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\HeaderStats.js":"12","F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\DashboardOrder.js":"13","F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\DashboardOrderCreate.js":"14","F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\Sidebar.js":"15","F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\DashboardMain.js":"16","F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\DashboardDepartmentCreate.js":"17","F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\DashboardDepartment.js":"18","F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\Chat.js":"19","F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\DashboardUsersCreate.js":"20","F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\DashboardUsers.js":"21","F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\Cards\\CardStats.js":"22","F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\Cards\\CardLineChart.js":"23","F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\Cards\\CardBarChart.js":"24","F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\Dropdowns\\UserDropdown.js":"25","F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\Dropdowns\\NotificationDropdown.js":"26","F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\ForumModal.js":"27","F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\Modal.js":"28","F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\hooks\\useModal.js":"29","F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\Empty.js":"30"},{"size":344,"mtime":1645450095748,"results":"31","hashOfConfig":"32"},{"size":2217,"mtime":1653321073526,"results":"33","hashOfConfig":"32"},{"size":1349,"mtime":1653373331400,"results":"34","hashOfConfig":"32"},{"size":7425,"mtime":1653319955291,"results":"35","hashOfConfig":"32"},{"size":3208,"mtime":1653319665920,"results":"36","hashOfConfig":"32"},{"size":7516,"mtime":1645450096479,"results":"37","hashOfConfig":"32"},{"size":262,"mtime":1645450095845,"results":"38","hashOfConfig":"32"},{"size":3819,"mtime":1645450096628,"results":"39","hashOfConfig":"32"},{"size":116,"mtime":1653318222708,"results":"40","hashOfConfig":"32"},{"size":772,"mtime":1645450096528,"results":"41","hashOfConfig":"32"},{"size":3491,"mtime":1653319711594,"results":"42","hashOfConfig":"32"},{"size":2633,"mtime":1653321513661,"results":"43","hashOfConfig":"32"},{"size":20482,"mtime":1653319561311,"results":"44","hashOfConfig":"32"},{"size":19897,"mtime":1653321125772,"results":"45","hashOfConfig":"32"},{"size":5849,"mtime":1653320806750,"results":"46","hashOfConfig":"32"},{"size":2634,"mtime":1653319555461,"results":"47","hashOfConfig":"32"},{"size":4821,"mtime":1653319545661,"results":"48","hashOfConfig":"32"},{"size":5743,"mtime":1653319540711,"results":"49","hashOfConfig":"32"},{"size":6918,"mtime":1653319518691,"results":"50","hashOfConfig":"32"},{"size":18417,"mtime":1653319576900,"results":"51","hashOfConfig":"32"},{"size":5982,"mtime":1653319570989,"results":"52","hashOfConfig":"32"},{"size":2425,"mtime":1645450096817,"results":"53","hashOfConfig":"32"},{"size":4595,"mtime":1645450096682,"results":"54","hashOfConfig":"32"},{"size":4279,"mtime":1645450096657,"results":"55","hashOfConfig":"32"},{"size":3130,"mtime":1645450096971,"results":"56","hashOfConfig":"32"},{"size":2461,"mtime":1645450096898,"results":"57","hashOfConfig":"32"},{"size":3492,"mtime":1645450096423,"results":"58","hashOfConfig":"32"},{"size":2679,"mtime":1645450096502,"results":"59","hashOfConfig":"32"},{"size":293,"mtime":1645450097002,"results":"60","hashOfConfig":"32"},{"size":73,"mtime":1653308271102,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"10ue1dy",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\index.js",[],["138","139"],"F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\Store.js",[],"F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\App.js",["140","141"],"F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\Order.js",["142","143","144","145","146","147","148","149"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Routes, Route, useParams } from \"react-router-dom\";\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\nimport axios from \"../actions/axios\";\r\n\r\nimport { Context } from \"./Store\";\r\nimport TimelineItem from \"./TimelineItem\";\r\nimport NavItem from \"./NavItem\";\r\nimport Chat from \"./Chat\";\r\nimport Forum from \"./Forum\";\r\n\r\nimport chatIcon from \"../assets/icons/discussion.svg\";\r\nimport forumIcon from \"../assets/icons/phases.svg\";\r\n\r\naxios.defaults.headers.common[\"Authorization\"] = localStorage.getItem(\"token\");\r\naxios.defaults.headers.common[\"uid\"] = localStorage.getItem(\"user\");\r\n\r\nexport default (props) => {\r\n  const [state, dispatch] = useContext(Context);\r\n\r\n  const { id } = useParams();\r\n  const [phase, setPhase] = useState(0);\r\n  const [order, setOrder] = useState([]);\r\n  const [tab, setTab] = useState(0);\r\n\r\n  const updateOrder = (_) => {\r\n    axios\r\n      .post(`/order/update/${id}`, { phases: order.phases })\r\n      .then((response) => {\r\n        console.log(\"updated\", response.data);\r\n      });\r\n  };\r\n  const phaseClicked = (i) => {\r\n    let phases = [...order.phases];\r\n    let setNested = \"-1\";\r\n\r\n    if (phases[i].state == \"pending\") {\r\n      phases[i].state = \"active\";\r\n      setNested = \"pending\";\r\n    } else if (phases[i].state === \"active\") {\r\n      phases[i].state = \"completed\";\r\n      setNested = \"completed\";\r\n    } else if (phases[i].state === \"completed\") {\r\n      phases[i].state = \"under_review\";\r\n      setNested = \"under_review\";\r\n    } else if (phases[i].state === \"under_review\") {\r\n      phases[i].state = \"completed\";\r\n      setNested = \"completed\";\r\n    }\r\n\r\n    if (setNested != \"-1\" && phases[i].nested) {\r\n      for (var x = 0; x < phases[i].nested.length; x++) {\r\n        phases[i].nested[x].state = setNested;\r\n      }\r\n    }\r\n\r\n    if (phases[i + 1] && phases[i].state === \"completed\") {\r\n      if (phases[i + 1].state === \"pending\") {\r\n        phases[i + 1].state = \"active\";\r\n      }\r\n    }\r\n    setOrder({ ...order, phases: phases });\r\n    updateOrder();\r\n  };\r\n\r\n  const nestedClicked = (i, j) => {\r\n    let phases = [...order.phases];\r\n\r\n    if (\r\n      phases[i].nested[j].state === \"active\" ||\r\n      phases[i].nested[j].state == \"pending\"\r\n    ) {\r\n      phases[i].nested[j].state = \"completed\";\r\n    } else if (phases[i].nested[j].state === \"completed\") {\r\n      phases[i].nested[j].state = \"under_review\";\r\n    } else if (phases[i].nested[j].state === \"under_review\") {\r\n      phases[i].nested[j].state = \"completed\";\r\n    }\r\n\r\n    if (phases[i].nested[j + 1] && phases[i].nested[j].state === \"completed\") {\r\n      if (phases[i].nested[j + 1].state === \"pending\") {\r\n        phases[i].nested[j + 1].state = \"active\";\r\n      }\r\n    }\r\n    let phaseComplete = true;\r\n    for (var x = 0; x < phases[i].nested.length; x++) {\r\n      if (phases[i].nested[x].state != \"completed\") {\r\n        phaseComplete = false;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (phaseComplete) {\r\n      phases[i].state = \"completed\";\r\n    } else {\r\n      phases[i].state = \"pending\";\r\n    }\r\n\r\n    setOrder({ ...order, phases: phases });\r\n\r\n    updateOrder();\r\n  };\r\n\r\n  //initial phase set\r\n  useEffect(() => {\r\n    if (order.phases) {\r\n      var active_phase = order.phases.findIndex(\r\n        (phase) => phase.state === \"active\"\r\n      );\r\n      if (active_phase >= 0) setPhase(active_phase);\r\n    }\r\n  }, []);\r\n  //load order\r\n  useEffect((_) => {\r\n    axios.get(`/order/find/${id}`).then((response) => {\r\n      console.log(\"order\", response.data);\r\n      setOrder(response.data);\r\n    });\r\n    dispatch({\r\n      type: \"SET_TITLE\",\r\n      payload: `Orders / ${props.name}`,\r\n    });\r\n  }, []);\r\n\r\n  const diffForHumans = (time) => {\r\n    if (time <= 0) {\r\n      return \"Late\";\r\n    }\r\n    let diff = \"\";\r\n    let seconds = Math.floor(time % 60);\r\n    time = (time - seconds) / 60;\r\n    let minutes = Math.floor(time % 60);\r\n    time = (time - minutes) / 60;\r\n    let hours = Math.floor(time % 24);\r\n    time = (time - hours) / 24;\r\n    let days = Math.floor(time % 7);\r\n    time = (time - days) / 7;\r\n    let weeks = Math.floor(time);\r\n\r\n    if (weeks > 0) diff += weeks + \"W\";\r\n    if (days > 0) diff += \" \" + days + \"D\";\r\n    if (hours > 0) diff += \" \" + hours + \"H\";\r\n    if (minutes > 0) diff += \" \" + minutes + \"M\";\r\n    if (seconds > 0) diff += \" \" + seconds + \"S\";\r\n\r\n    return diff;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-1 mt-6 overflow-y-auto bg-gray-700\">\r\n        <div className=\"-mr-3 bg-gray-700\">\r\n          <div className=\"flex flex-col h-full overflow-y-scroll\">\r\n            {/* <Link to='/dashboard'  className=\"mr-auto ml-auto mb-2 bg-gray-500 text-white p-2 rounded-md\">Go Back</Link> */}\r\n            {order.phases &&\r\n              order.phases.map((phase, index) => (\r\n                <>\r\n                  {index === 0 ? (\r\n                    <div key={index} className=\"h-full mx-auto px-10\">\r\n                      <CountdownCircleTimer\r\n                        isPlaying\r\n                        duration={\r\n                          (order.orderTimeline * 1000 -\r\n                            (new Date().getTime() - order.startTime)) /\r\n                          1000\r\n                        }\r\n                        colors={[[\"#ff7675\"]]}\r\n                      >\r\n                        {({ remainingTime }) => diffForHumans(remainingTime)}\r\n                      </CountdownCircleTimer>\r\n                    </div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  <TimelineItem\r\n                    title={phase.title}\r\n                    last={index === order.phases.length - 1}\r\n                    state={phase.state}\r\n                    setPhase={(_) => {\r\n                      dispatch({\r\n                        type: \"SET_TITLE\",\r\n                        payload: `Orders / ${props.name} / ${phase.title}`,\r\n                      });\r\n                      setPhase(index);\r\n                    }}\r\n                    completePhase={(_) => {\r\n                      phaseClicked(index);\r\n                    }}\r\n                    active={phase === order.phases.length - index - 1}\r\n                    nested={phase.nested}\r\n                    completeNestedPhase={(i) => {\r\n                      nestedClicked(index, i);\r\n                    }}\r\n                  />\r\n                </>\r\n              ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"flex flex-col flex-1 pb-4 mr-6 bg-white gap-y-2 rounded-t-xl\">\r\n          <nav className=\"flex items-center bg-gray-100 rounded-t-xl\">\r\n            <NavItem\r\n              label=\"Chat\"\r\n              active={!tab}\r\n              src={chatIcon}\r\n              onClick={(_) => setTab(0)}\r\n              path=\"\"\r\n            />\r\n            <NavItem\r\n              label=\"Forum\"\r\n              src={forumIcon}\r\n              active={tab}\r\n              onClick={(_) => setTab(1)}\r\n              path=\"forum\"\r\n            />\r\n          </nav>\r\n          <Routes>\r\n            <Route\r\n              path=\"/\"\r\n              element={\r\n                order.phases &&\r\n                order.phases.length > 0 && <Chat order_id={id} phase={phase} />\r\n              }\r\n            />\r\n            <Route path=\"forum\" element={<Forum order_id={id} />} />\r\n          </Routes>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\Dashboard.js",["150","151","152","153"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport axios from \"../actions/axios\";\r\nimport { Context } from \"./Store\";\r\nimport ContextProvider from \"./Store\";\r\nimport { LOGOUT_SUCCESS } from \"../actions/types\";\r\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\r\n\r\nimport Sidebar from \"./Sidebar\";\r\nimport HeaderStats from \"./HeaderStats\";\r\nimport DashboardMain from \"./DashboardMain\";\r\nimport DashboardOrder from \"./DashboardOrder\";\r\nimport DashboardOrderCreate from \"./DashboardOrderCreate\";\r\nimport DashboardDepartmentCreate from \"./DashboardDepartmentCreate\";\r\nimport DashboardDepartment from \"./DashboardDepartment\";\r\nimport DashboardUsers from \"./DashboardUsers\";\r\nimport DashboardUsersCreate from \"./DashboardUsersCreate\";\r\n\r\naxios.defaults.headers.common[\"Authorization\"] = localStorage.getItem(\"token\");\r\naxios.defaults.headers.common[\"uid\"] = localStorage.getItem(\"user\");\r\n\r\nexport default () => {\r\n  const navigate = useNavigate();\r\n  const [state, dispatch] = useContext(Context);\r\n  const [summary, setSummary] = useState({\r\n    open: 0,\r\n    sampling: 0,\r\n    production: 0,\r\n    closed: 0,\r\n  });\r\n\r\n  //on authenticate state change\r\n  useEffect(() => {\r\n    if (\r\n      state.auth.isLoading === false &&\r\n      state.auth.isAuthenticated === false\r\n    ) {\r\n      navigate(\"/logout\");\r\n    }\r\n  }, [state]);\r\n\r\n  // //logout\r\n  const logout = () => {\r\n    dispatch({\r\n      type: LOGOUT_SUCCESS,\r\n    });\r\n  };\r\n\r\n  useEffect((_) => {\r\n    dispatch({\r\n      type: \"SET_TITLE\",\r\n      payload: `Dashboard`,\r\n    });\r\n  }, []);\r\n\r\n  const updateSummary = () => {\r\n    axios.get(\"/order/summary/\").then((response) => {\r\n      if (response.data) {\r\n        console.log(`summary= ${JSON.stringify(response.data, null, 4)}`);\r\n        setSummary(response.data);\r\n      } else {\r\n        alert(\"Unexpected Data Occured while fetching summary details\");\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateSummary();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"relative h-full overflow-y-auto bg-gray-200 md:ml-64\">\r\n      <ContextProvider>\r\n        <Sidebar logout={logout} />\r\n        {state.title != \"Dashboard / Orders\" && (\r\n          <HeaderStats summary={summary} />\r\n        )}\r\n        <Routes>\r\n          <Route path=\"/\" element={<DashboardMain />} />\r\n          <Route path=\"users\" element={<DashboardUsers />} />\r\n          <Route path=\"users/create\" element={<DashboardUsersCreate />} />\r\n          <Route path=\"users/edit/:id\" element={<DashboardUsersCreate />} />\r\n          <Route path=\"departments\" element={<DashboardDepartment />} />\r\n          <Route\r\n            path=\"departments/create\"\r\n            element={<DashboardDepartmentCreate />}\r\n          />\r\n          <Route\r\n            path=\"departments/edit/:id\"\r\n            element={<DashboardDepartmentCreate />}\r\n          />\r\n          <Route path=\"orders/create\" element={<DashboardOrderCreate />} />\r\n          <Route path=\"orders/edit/:id\" element={<DashboardOrderCreate />} />\r\n          <Route\r\n            path=\"orders\"\r\n            element={<DashboardOrder updateSummary={updateSummary} />}\r\n          />\r\n        </Routes>\r\n      </ContextProvider>\r\n    </div>\r\n  );\r\n};\r\n","F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\Login.js",["154","155","156","157"],"import { useState, useEffect, useContext } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport axios from '../actions/axios';\r\n\r\nimport { Context } from \"./Store\";\r\nimport {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  GET_ERRORS, CLEAR_ERRORS\r\n} from '../actions/types';\r\n\r\nexport default _ => {\r\n\r\n   \r\n   const [email, setEmail] = useState('');\r\n   const [password, setPassword] = useState('');\r\n   const [err, setErr] = useState('');\r\n   const navigate = useNavigate();\r\n\r\n   const [state, dispatch] = useContext(Context);\r\n\r\n   const returnErrors = (msg, status, id = null) => {\r\n      return {\r\n        type: GET_ERRORS,\r\n        payload: { msg, status, id }\r\n      };\r\n    };\r\n\r\n   const handleOnSubmit = (e) => {\r\n\r\n      e.preventDefault();\r\n      dispatch({ type: CLEAR_ERRORS });\r\n\r\n      // Headers\r\n      const config = {\r\n         headers: {\r\n            'Content-Type': 'application/json'\r\n         }\r\n      };\r\n\r\n      // Request body\r\n      const body = JSON.stringify({ email, password });\r\n\r\n      axios\r\n         .post('/auth', body, config)\r\n            .then(res => {\r\n               if(res.status){\r\n                  console.log('1',res.data);\r\n                  dispatch({\r\n                     type: LOGIN_SUCCESS,\r\n                     payload: res.data\r\n                  });\r\n               }else{\r\n                  setErr(res.message);\r\n                  console.log('2',res.message);\r\n                  dispatch(returnErrors(res.message,res.status,'LOGIN_FAIL'));\r\n                  dispatch({ type: LOGIN_FAIL });\r\n               }\r\n            }\r\n            \r\n         )\r\n         .catch(err => {\r\n            setErr(err.response.data.message);\r\n            dispatch(\r\n               returnErrors(err.response.data, err.response.status, 'LOGIN_FAIL')\r\n            );\r\n            dispatch({\r\n               type: LOGIN_FAIL\r\n            });\r\n         });\r\n      // const user = { email, password };\r\n      // login(user);\r\n   };\r\n\r\n\r\n\r\n   useEffect(() => {\r\n      console.log('state changed' , state);\r\n      if(state.auth.isAuthenticated){\r\n         navigate('/dashboard');\r\n      }\r\n   }, [state]);\r\n\r\n   useEffect(_ => {\r\n      dispatch({\r\n         type: \"SET_TITLE\",\r\n         payload: `Login`,\r\n      });\r\n   }, []);\r\n   return (\r\n      <div className=\"flex items-center justify-center h-full bg-gray-50\">\r\n         <div className=\"min-h-screen md:w-1/3 flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n            <div className=\" w-full space-y-8\">\r\n               <div>\r\n                  <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\r\n                     Sign in\r\n                  </h2>\r\n               </div>\r\n               <form className=\"mt-8 space-y-6\" onSubmit={handleOnSubmit} action=\"#\" method=\"POST\">\r\n                  <input type=\"hidden\" name=\"remember\" value=\"true\" />\r\n                  {state.error.msg.msg ? <div className=\"mt-2 mb-2\">\r\n                     <p style={{color:\"red\"}}>{state.error.msg.msg}</p>\r\n                  </div> : err!=\"\" && <div className=\"mt-2 mb-2\"><p style={{color:\"red\"}}>{err}</p></div>}\r\n                  <div className=\"rounded-md shadow-sm -space-y-px\">\r\n                     <div>\r\n                        <label htmlFor=\"email\" className=\"sr-only\">\r\n                           Email\r\n                        </label>\r\n                        <input\r\n                           id=\"email\"\r\n                           name=\"email\"\r\n                           type=\"email\"\r\n                           value={email}\r\n                           onChange={(e) => setEmail(e.target.value)}\r\n                           required\r\n                           className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n                           placeholder=\"Email address\"\r\n                        />\r\n                     </div>\r\n                     <div>\r\n                        <label htmlFor=\"password\" className=\"sr-only\">\r\n                           Password\r\n                        </label>\r\n                        <input\r\n                           id=\"password\"\r\n                           name=\"password\"\r\n                           type=\"password\"\r\n                           value={password}\r\n                           onChange={(e) => setPassword(e.target.value)}\r\n                           autoComplete=\"current-password\"\r\n                           required\r\n                           className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n                           placeholder=\"Password\"\r\n                        />\r\n                     </div>\r\n                  </div>\r\n\r\n                  <div className=\"flex flex-col items-center justify-between\">\r\n                     <div className=\"flex items-center\">\r\n                        <input\r\n                           id=\"remember_me\"\r\n                           name=\"remember_me\"\r\n                           type=\"checkbox\"\r\n                           className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\r\n                        />\r\n                        <label\r\n                           htmlFor=\"remember_me\"\r\n                           className=\"ml-2 block text-sm text-gray-900\"\r\n                        >\r\n                           Remember me\r\n                        </label>\r\n                     </div>\r\n\r\n                     <div className=\"text-sm\">\r\n                        <a\r\n                           href=\"##\"\r\n                           className=\"font-medium text-indigo-600 hover:text-indigo-500\"\r\n                        >\r\n                           Forgot your password?\r\n                        </a>\r\n                     </div>\r\n                  </div>\r\n\r\n                  <div>\r\n                     <button\r\n                        type=\"submit\"\r\n                        className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                     >\r\n                        <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\">\r\n                           <svg\r\n                              className=\"h-5 w-5 text-indigo-500 group-hover:text-indigo-400\"\r\n                              xmlns=\"http://www.w3.org/2000/svg\"\r\n                              viewBox=\"0 0 20 20\"\r\n                              fillRule=\"currentColor\"\r\n                              aria-hidden=\"true\"\r\n                           >\r\n                              <path\r\n                                 fillRule=\"evenodd\"\r\n                                 d=\"M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z\"\r\n                                 clipRule=\"evenodd\"\r\n                              />\r\n                           </svg>\r\n                        </span>\r\n                        Sign in\r\n                     </button>\r\n                  </div>\r\n               </form>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n","F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\actions\\types.js",[],"F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\TimelineItem.js",[],"F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\actions\\axios.js",[],"F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\NavItem.js",[],"F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\Forum.js",["158","159"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Context } from \"./Store\";\r\nimport axios from \"../actions/axios\";\r\nimport Modal from \"./Modal\";\r\nimport ForumModal from \"./ForumModal\";\r\n\r\nimport { useModal } from \"../hooks/useModal\";\r\n\r\naxios.defaults.headers.common[\"Authorization\"] = localStorage.getItem(\"token\");\r\naxios.defaults.headers.common[\"uid\"] = localStorage.getItem(\"user\");\r\n\r\n/* eslint import/no-anonymous-default-export: [2, {\"allowArrowFunction\": true}] */\r\nexport default ({ order_id }) => {\r\n  const [modalOpen, toggleModal] = useModal();\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [state, dispatch] = useContext(Context);\r\n\r\n  const [forums, setForums] = useState([]);\r\n\r\n  const checkAdmin = (_) => {\r\n    if (state.auth) {\r\n      if (state.auth.user) {\r\n        if (state.auth.user.isAdmin === true) {\r\n          setIsAdmin(true);\r\n        }\r\n      }\r\n    }\r\n    setIsAdmin(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/forum/sync\")\r\n      .then((res) => {\r\n        setForums(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"cannot get forums\", err);\r\n      });\r\n  }, []);\r\n\r\n  const addForum = (payload) => {\r\n    axios\r\n      .post(\"/forum/new\", payload)\r\n      .then((res) => {\r\n        toggleModal();\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"could not create forum\", err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkAdmin();\r\n  }, [state]);\r\n  return (\r\n    <>\r\n      <Modal\r\n        title=\"Post a thread\"\r\n        isActive={modalOpen}\r\n        handleClose={(_) => {\r\n          toggleModal();\r\n        }}\r\n      >\r\n        <ForumModal addForum={(payload) => addForum(payload)} />\r\n      </Modal>\r\n      <button\r\n        onClick={toggleModal}\r\n        className=\"w-full py-2 bg-purple-500 text-white font-bold hover:bg-purple-700\"\r\n      >\r\n        Post Thread\r\n      </button>\r\n      <div className=\"flex flex-col-reverse flex-1 overflow-y-auto\">\r\n        {forums.map((forum) => (\r\n          <div className=\"flex flex-col p-4 cursor-pointer bg-gray-50 hover:shadow hover:bg-gray-100\">\r\n            <dix className=\"flex gap-x-2\">\r\n              <img\r\n                alt=\"profile\"\r\n                src=\"https://images.unsplash.com/photo-1603415526960-f7e0328c63b1?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80\"\r\n                className=\"w-10 h-10 bg-gray-200 rounded-full\"\r\n              />\r\n              <div className=\"flex flex-col flex-1\">\r\n                <h1 className=\"font-semibold\">{forum.sender}</h1>\r\n                <p className=\"text-sm text-gray-400\">{forum.sent}</p>\r\n              </div>\r\n              <div className=\"flex items-center h-6 px-2 pb-1 mr-8 text-white bg-yellow-500 rounded-xl\">\r\n                {forum.status} {isAdmin && <p>testing</p>}\r\n              </div>\r\n              {isAdmin && (\r\n                <>\r\n                  <div className=\"flex items-center h-6 px-2 pb-1 mr-8 text-white bg-blue-500\">\r\n                    Marks as Resolved\r\n                  </div>\r\n                  <div className=\"flex items-center h-6 px-2 pb-1 mr-8 text-white bg-red-500\">\r\n                    Marks as Closed\r\n                  </div>\r\n                </>\r\n              )}\r\n            </dix>\r\n            <div className=\"h-12 mt-2 overflow-hidden overflow-ellipsis\">\r\n              {forum.content}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\HeaderStats.js",[],"F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\DashboardOrder.js",["160","161","162","163","164","165","166","167","168","169","170","171","172","173","174"],"import { useEffect, useContext, useState } from \"react\";\r\nimport { Context } from \"./Store\";\r\nimport axios from \"../actions/axios\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Empty } from \"./Empty\";\r\n\r\naxios.defaults.headers.common[\"Authorization\"] = localStorage.getItem(\"token\");\r\naxios.defaults.headers.common[\"uid\"] = localStorage.getItem(\"user\");\r\n\r\nexport default ({ updateSummary }) => {\r\n  const orderStatuses = {\r\n    1: \"Open\",\r\n    2: \"In Sampling\",\r\n    3: \"In Production\",\r\n    4: \"In Finishing\",\r\n    5: \"Closed\",\r\n    6: \"Shipped\",\r\n  };\r\n  const itemsPerPage = 10;\r\n  const [page, setPage] = useState(1);\r\n  const [pages, setPages] = useState(0);\r\n  const [pagesArr, setPagesArr] = useState([]);\r\n  const [totalOrders, setTotalOrders] = useState(0);\r\n\r\n  const navigate = useNavigate();\r\n  const [orders, setOrders] = useState(-1);\r\n  const [filterBy, setFilterBy] = useState(\"-\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const [state, dispatch] = useContext(Context);\r\n\r\n  const editOrder = async (order) => {\r\n    navigate(\"/dashboard/orders/edit/\" + order);\r\n  };\r\n\r\n  const deleteOrder = async (order) => {\r\n    if (window.confirm(\"Are you sure you want to delete this order?\")) {\r\n      console.log(\"deleting id \", order);\r\n      axios\r\n        .post(\r\n          \"/order/delete/\" + order,\r\n          {},\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          setOrders(\r\n            orders.filter((ord) => {\r\n              return ord._id !== order;\r\n            })\r\n          );\r\n        })\r\n        .catch((err) => {\r\n          alert(\"Unexpected error occured while deleting order\");\r\n        });\r\n    }\r\n  };\r\n\r\n  const filterOrders = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if ((filterBy != \"-\" && search != \"\") || date != \"\") {\r\n      setOrders(-1);\r\n      axios\r\n        .post(\r\n          \"/order/sync/\" + page,\r\n          {\r\n            filterBy: filterBy,\r\n            search: search,\r\n            date: date,\r\n          },\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          console.log(\"orders\", response.data.docs);\r\n          setOrders(response.data.docs);\r\n          setPages(Math.ceil(response.data.total / itemsPerPage));\r\n          setTotalOrders(response.data.total);\r\n        })\r\n        .catch((err) => {\r\n          alert(\"Unexpected error occured while fetching order\");\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateSummary();\r\n  }, [orders]);\r\n\r\n  useEffect((_) => {\r\n    dispatch({\r\n      type: \"SET_TITLE\",\r\n      payload: `Dashboard / Orders`,\r\n    });\r\n  }, []);\r\n\r\n  const FetchOrders = () => {\r\n    setOrders(-1);\r\n    axios\r\n      .post(\r\n        \"/order/sync/\" + page,\r\n        {},\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        //   console.log(\"orders\", response.data.docs);\r\n        //   console.log(`res :: ${JSON.stringify(response.data, null, 4)}`);\r\n        setOrders(response.data.docs);\r\n        setPages(Math.ceil(response.data.total / itemsPerPage));\r\n        setTotalOrders(response.data.total);\r\n      })\r\n      .catch((err) => {\r\n        alert(\"Unexpected error occured while fetching order\");\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    FetchOrders();\r\n  }, [page]);\r\n\r\n  useEffect(() => {\r\n    if (pages > 0) {\r\n      let newArray = [];\r\n      if (pages <= 10) {\r\n        for (let i = 1; i <= pages; i++) {\r\n          newArray.push(i);\r\n        }\r\n      } else {\r\n        let midStart = page - 2;\r\n        let midEnd = page + 2;\r\n\r\n        if (midStart <= 2) {\r\n          midStart = 3;\r\n        }\r\n        if (midEnd >= pages - 1) {\r\n          midEnd = pages - 2;\r\n        }\r\n        for (let i = 1; i <= 2; i++) {\r\n          newArray.push(i);\r\n        }\r\n        if (midStart != 3) newArray.push(-1);\r\n        for (let i = midStart; i <= midEnd; i++) {\r\n          newArray.push(i);\r\n        }\r\n        if (midEnd !== pages - 2) {\r\n          newArray.push(-1);\r\n        }\r\n        for (let i = pages - 1; i <= pages; i++) {\r\n          newArray.push(i);\r\n        }\r\n      }\r\n      setPagesArr(newArray);\r\n    }\r\n  }, [pages, page]);\r\n\r\n  return (\r\n    <div className=\"relative flex flex-col min-w-0 break-words bg-white w-full mb-6 shadow-lg rounded\">\r\n      <div className=\"rounded-t mb-0 px-4 py-3 border-0\">\r\n        <div className=\"flex flex-wrap items-center\">\r\n          <div className=\"relative w-full px-4 max-w-full flex-grow flex-1\">\r\n            <h3 className=\"font-semibold text-base text-gray-800\">Orders</h3>\r\n          </div>\r\n          <div className=\"relative w-full px-4 max-w-full flex-grow flex-1 text-right\">\r\n            <Link\r\n              to=\"/dashboard/orders/create\"\r\n              className=\"bg-indigo-500 text-white active:bg-indigo-600 text-xs font-bold uppercase px-3 py-1 rounded outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\r\n              type=\"button\"\r\n            >\r\n              Create New\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <form\r\n        className=\"flex gap-x-2 px-4  items-center py-3 border-0 rounded-t\"\r\n        onSubmit={(e) => filterOrders(e)}\r\n      >\r\n        <b>Filter By: </b>\r\n        <select\r\n          onChange={(e) => setFilterBy(e.target.value)}\r\n          value={filterBy}\r\n          className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n        >\r\n          <option value=\"-\">-</option>\r\n          <option value=\"orderCode\">Order Code</option>\r\n          <option value=\"orderStatus\">Order Status</option>\r\n          <option value=\"customerName\">Customer Name</option>\r\n          <option value=\"brandName\">Brand Name</option>\r\n          <option value=\"country\">Country</option>\r\n          <option value=\"state\">State</option>\r\n          <option value=\"product\">Product</option>\r\n          <option value=\"fabric\">Fabric</option>\r\n          <option value=\"color\">Color</option>\r\n          <option value=\"quantity\">Quantity</option>\r\n          <option value=\"phases\">Phases</option>\r\n        </select>\r\n\r\n        <b>Search : </b>\r\n        <input\r\n          type=\"text\"\r\n          name=\"search\"\r\n          value={search}\r\n          onChange={(e) => setSearch(e.target.value)}\r\n          className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n        />\r\n\r\n        <input\r\n          type=\"date\"\r\n          name=\"date\"\r\n          className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n          onChange={(e) => setDate(e.target.value)}\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-pink-600 hover:bg-pink-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-pink-500\"\r\n        >\r\n          Filter\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-pink-600 hover:bg-pink-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-pink-500\"\r\n          onClick={() => {\r\n            FetchOrders();\r\n            setSearch(\"\");\r\n            setFilterBy(\"-\");\r\n          }}\r\n        >\r\n          Clear Filter\r\n        </button>\r\n      </form>\r\n\r\n      <div className=\"block w-full overflow-x-auto\">\r\n        <table className=\"items-center w-full bg-transparent border-collapse\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"px-6 bg-gray-100 text-gray-600 align-middle border border-solid border-gray-200 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold text-left\">\r\n                Brand\r\n              </th>\r\n              <th className=\"px-6 bg-gray-100 text-gray-600 align-middle border border-solid border-gray-200 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold text-left\">\r\n                Customer Name\r\n              </th>\r\n              <th className=\"px-6 bg-gray-100 text-gray-600 align-middle border border-solid border-gray-200 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold text-left\">\r\n                Country\r\n              </th>\r\n              <th className=\"px-6 bg-gray-100 text-gray-600 align-middle border border-solid border-gray-200 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold text-left\">\r\n                State\r\n              </th>\r\n              <th\r\n                colSpan=\"6\"\r\n                className=\"px-6 bg-gray-100 text-gray-600 align-middle border border-solid border-gray-200 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold text-left\"\r\n              >\r\n                Products\r\n              </th>\r\n\r\n              <th className=\"px-6 bg-gray-100 text-gray-600 align-middle border border-solid border-gray-200 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold text-left\">\r\n                Actions\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders === -1 ? (\r\n              <tr>\r\n                <th\r\n                  className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4 text-left\"\r\n                  colSpan=\"9\"\r\n                >\r\n                  Loading....\r\n                </th>\r\n              </tr>\r\n            ) : (\r\n              orders.length > 0 &&\r\n              orders.map((order, index) => (\r\n                <Empty key={order._id}>\r\n                  <tr>\r\n                    <td\r\n                      rowSpan={order.orderCode.length + 1}\r\n                      className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4\"\r\n                    >\r\n                      {order.brandName}\r\n                    </td>\r\n                    <td\r\n                      rowSpan={order.orderCode.length + 1}\r\n                      className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4\"\r\n                    >\r\n                      {order.customerName}\r\n                    </td>\r\n                    <td\r\n                      rowSpan={order.orderCode.length + 1}\r\n                      className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4\"\r\n                    >\r\n                      {order.country}\r\n                    </td>\r\n                    <td\r\n                      rowSpan={order.orderCode.length + 1}\r\n                      className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4\"\r\n                    >\r\n                      {order.state}\r\n                    </td>\r\n                    <th className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4 text-left\">\r\n                      Code\r\n                    </th>\r\n                    <th className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4 text-left\">\r\n                      Status\r\n                    </th>\r\n                    <th className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4 text-left\">\r\n                      Product\r\n                    </th>\r\n                    <th className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4 text-left\">\r\n                      Fabric\r\n                    </th>\r\n                    <th className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4 text-left\">\r\n                      Color\r\n                    </th>\r\n                    <th className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4 text-left\">\r\n                      Qty\r\n                    </th>\r\n                    <td\r\n                      rowSpan={order.orderCode.length + 1}\r\n                      className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4\"\r\n                    >\r\n                      <button\r\n                        className=\"bg-indigo-500 text-white active:bg-indigo-600 text-xs font-bold uppercase px-3 py-1 rounded outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\r\n                        type=\"button\"\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          editOrder(order._id);\r\n                        }}\r\n                      >\r\n                        Edit\r\n                      </button>\r\n\r\n                      <button\r\n                        className=\"bg-indigo-500 text-white active:bg-indigo-600 text-xs font-bold uppercase px-3 py-1 rounded outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\r\n                        type=\"button\"\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          deleteOrder(order._id);\r\n                        }}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n\r\n                  {[...Array(order.orderCode.length)].map((_, i) => (\r\n                    <tr\r\n                      className={\r\n                        new Date().getTime() >=\r\n                          order.orderTimeline * 1000 + order.startTime &&\r\n                        \"bg-red-400\"\r\n                      }\r\n                    >\r\n                      <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4 text-left\">\r\n                        {order.orderCode[i]}\r\n                      </td>\r\n\r\n                      <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4\">\r\n                        {orderStatuses[order.orderStatus[i]]}\r\n                      </td>\r\n                      <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4\">\r\n                        {order.product[i]}\r\n                      </td>\r\n                      <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4\">\r\n                        {order.fabric[i]}\r\n                      </td>\r\n                      <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4\">\r\n                        {order.color[i]}\r\n                      </td>\r\n                      <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4\">\r\n                        {order.quantity[i]}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </Empty>\r\n              ))\r\n            )}\r\n          </tbody>\r\n        </table>\r\n\r\n        {pages > 0 && (\r\n          <div className=\"bg-white px-4 py-3 flex items-center justify-between border-t border-gray-200 sm:px-6\">\r\n            <div className=\"flex-1 flex justify-between sm:hidden\">\r\n              <a\r\n                href=\"#\"\r\n                className=\"relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:text-gray-500\"\r\n              >\r\n                Previous\r\n              </a>\r\n              <a\r\n                href=\"#\"\r\n                className=\"ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:text-gray-500\"\r\n              >\r\n                Next\r\n              </a>\r\n            </div>\r\n            <div className=\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\">\r\n              <div>\r\n                <p className=\"text-sm flex gap-x-1 text-gray-700\">\r\n                  Showing\r\n                  <span className=\"font-medium\">{(page - 1) * 10 + 1}</span>\r\n                  to\r\n                  <span className=\"font-medium\">\r\n                    {(page - 1) * 10 + 10 > totalOrders\r\n                      ? totalOrders\r\n                      : (page - 1) * 10 + 10}\r\n                  </span>\r\n                  of\r\n                  <span className=\"font-medium\">{totalOrders}</span>\r\n                  results\r\n                </p>\r\n              </div>\r\n              <div>\r\n                <nav\r\n                  className=\"relative z-0 inline-flex rounded-md shadow-sm -space-x-px\"\r\n                  aria-label=\"Pagination\"\r\n                >\r\n                  {page - 1 > 0 && (\r\n                    <a\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        setPage(page - 1);\r\n                      }}\r\n                      className=\"relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50\"\r\n                    >\r\n                      <span className=\"sr-only\">Previous</span>\r\n                      <svg\r\n                        className=\"h-5 w-5\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        viewBox=\"0 0 20 20\"\r\n                        fill=\"currentColor\"\r\n                        aria-hidden=\"true\"\r\n                      >\r\n                        <path\r\n                          fillRule=\"evenodd\"\r\n                          d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\"\r\n                          clip-rule=\"evenodd\"\r\n                        />\r\n                      </svg>\r\n                    </a>\r\n                  )}\r\n\r\n                  {pagesArr.map((pageItem) =>\r\n                    pageItem === -1 ? (\r\n                      <span className=\"relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-700\">\r\n                        ...\r\n                      </span>\r\n                    ) : (\r\n                      <a\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          setPage(pageItem);\r\n                        }}\r\n                        className={`${\r\n                          page == pageItem\r\n                            ? \"bg-indigo-500 text-white hover:bg-indigo-600\"\r\n                            : \"text-gray-700 hover:bg-gray-50\"\r\n                        } hidden md:inline-flex relative items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium`}\r\n                      >\r\n                        {pageItem}\r\n                      </a>\r\n                    )\r\n                  )}\r\n\r\n                  {page + 1 <= pages && (\r\n                    <a\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        setPage(page + 1);\r\n                      }}\r\n                      className=\"relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50\"\r\n                    >\r\n                      <span className=\"sr-only\">Next</span>\r\n                      <svg\r\n                        className=\"h-5 w-5\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        viewBox=\"0 0 20 20\"\r\n                        fill=\"currentColor\"\r\n                        aria-hidden=\"true\"\r\n                      >\r\n                        <path\r\n                          fillRule=\"evenodd\"\r\n                          d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\r\n                          clip-rule=\"evenodd\"\r\n                        />\r\n                      </svg>\r\n                    </a>\r\n                  )}\r\n                </nav>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\DashboardOrderCreate.js",["175","176","177","178","179"],"import { useEffect, useContext, useState } from \"react\";\r\nimport { Context } from \"./Store\";\r\nimport axios from \"../actions/axios\";\r\nimport { Navigate, useNavigate, useParams } from \"react-router-dom\";\r\n\r\naxios.defaults.headers.common[\"Authorization\"] = localStorage.getItem(\"token\");\r\naxios.defaults.headers.common[\"uid\"] = localStorage.getItem(\"user\");\r\n\r\nconst DashboardOrderCreate = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const [action, setAction] = useState(\"Create Order\");\r\n\r\n  const [customerName, setCustomerName] = useState(\"\");\r\n  const [brand, setBrand] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [_state, set_State] = useState(\"\");\r\n\r\n  const [rows, setRows] = useState(1);\r\n  const [orderCode, setOrderCode] = useState([]);\r\n  const [orderStatus, setOrderStatus] = useState([1]);\r\n  const [product, setProduct] = useState([\"\"]);\r\n  const [fabric, setFabric] = useState([\"\"]);\r\n  const [color, setColor] = useState([\"\"]);\r\n  const [quantity, setQuantity] = useState([1]);\r\n\r\n  const [orderTimeline, setOrderTimeline] = useState(604800);\r\n\r\n  const onSubmit = (e) => {\r\n    if (action === \"Create Order\") {\r\n      addOrder(e);\r\n    } else if (action === \"Update Order\") {\r\n      updateOrder(e);\r\n    } else {\r\n      alert(\"Unexpected Error Occured.\");\r\n    }\r\n  };\r\n\r\n  const addOrder = (e) => {\r\n    e.preventDefault();\r\n    let user = localStorage.getItem(\"user\");\r\n\r\n    if (user) {\r\n      axios\r\n        .post(\r\n          \"/auth/user\",\r\n          { userId: user },\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          //  console.log(`post data :: ${JSON.stringify(orderStatus)}`);\r\n          axios\r\n            .post(\"/order/new\", {\r\n              orderCode: orderCode,\r\n              orderStatus: orderStatus,\r\n              customerName: localStorage.getItem(\"userName\"),\r\n              brandName: brand,\r\n              country: country,\r\n              state: _state,\r\n              product: product,\r\n              fabric: fabric,\r\n              color: color,\r\n              quantity: quantity,\r\n              orderTimeline: orderTimeline,\r\n              user: res.data._id,\r\n            })\r\n            .then((res) => {\r\n              navigate(\"/dashboard/orders\");\r\n            });\r\n        })\r\n        .catch((err) => {\r\n          alert(\"Unexpected error occured\");\r\n        });\r\n    } else {\r\n      navigate(\"/logout\");\r\n    }\r\n  };\r\n\r\n  const updateOrder = async (e) => {\r\n    e.preventDefault();\r\n    await axios\r\n      .post(\"/order/update/\" + id, {\r\n        orderCode: orderCode,\r\n        orderStatus: orderStatus,\r\n        customerName: localStorage.getItem(\"userName\"),\r\n        brandName: brand,\r\n        country: country,\r\n        state: _state,\r\n        product: product,\r\n        fabric: fabric,\r\n        color: color,\r\n        quantity: quantity,\r\n        orderTimeline: orderTimeline,\r\n      })\r\n      .then((res) => {\r\n        navigate(\"/dashboard/orders\");\r\n      });\r\n  };\r\n\r\n  const removeRow = (i) => {\r\n    if (rows > 1) {\r\n      setRows(rows - 1);\r\n\r\n      let newCode = [...orderCode];\r\n      newCode.pop();\r\n      setOrderCode([...newCode]);\r\n      let newStatus = [...orderStatus];\r\n      newStatus.pop();\r\n      setOrderStatus([...newStatus]);\r\n      let newProd = [...product];\r\n      newProd.pop();\r\n      setProduct([...newProd]);\r\n      let newFab = [...fabric];\r\n      newFab.pop();\r\n      setFabric([...newFab]);\r\n      let newQuan = [...quantity];\r\n      newQuan.pop();\r\n      setQuantity([...newQuan]);\r\n      let newCol = [...color];\r\n      newCol.pop();\r\n      setColor([...newCol]);\r\n    }\r\n  };\r\n\r\n  const addRow = () => {\r\n    if (rows < 20) {\r\n      let newCode = [...orderCode];\r\n      newCode[rows] = \"\";\r\n      setOrderCode([...newCode]);\r\n      let newStatus = [...orderStatus];\r\n      newStatus[rows] = 1;\r\n      setOrderStatus([...orderStatus]);\r\n      let newProd = [...product];\r\n      newProd[rows] = \"\";\r\n      setProduct([...newProd]);\r\n      let newFab = [...fabric];\r\n      newFab[rows] = \"\";\r\n      setFabric([...newFab]);\r\n      let newQuan = [...quantity];\r\n      newQuan[rows] = \"\";\r\n      setQuantity([...newQuan]);\r\n      let newCol = [...color];\r\n      newCol[rows] = \"\";\r\n      setColor([...newCol]);\r\n      setRows(rows + 1);\r\n    } else {\r\n      alert(\"You have reached maximum number of rows\");\r\n    }\r\n  };\r\n\r\n  const [state, dispatch] = useContext(Context);\r\n  useEffect((_) => {\r\n    dispatch({\r\n      type: \"SET_TITLE\",\r\n      payload: `Dashboard / Orders / Create`,\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      setAction(\"Update Order\");\r\n      axios.get(\"/order/find/\" + id).then((response) => {\r\n        if (response.data) {\r\n          setOrderCode(response.data.orderCode);\r\n          setOrderStatus(response.data.orderStatus);\r\n          setCustomerName(response.data.customerName);\r\n          setBrand(response.data.brandName);\r\n          setCountry(response.data.country);\r\n          set_State(response.data.state);\r\n          setProduct(response.data.product);\r\n          setFabric(response.data.fabric);\r\n          setQuantity(response.data.quantity);\r\n          setColor(response.data.color);\r\n          setOrderTimeline(response.data.orderTimeline);\r\n          setRows(response.data.orderCode.length);\r\n        } else {\r\n          alert(\"Unexpected Data Occured while fetching department details\");\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mt-10 sm:mt-0\">\r\n      <div className=\"sm: px-2 md:px-4 lg:px-10 xl:px-20 py-10\">\r\n        <div className=\"mt-5 md:mt-0 md:col-span-2\">\r\n          <form onSubmit={onSubmit} method=\"POST\">\r\n            <div className=\"shadow overflow-hidden w-full sm:rounded-md\">\r\n              <div className=\"px-4 py-5 bg-white sm:p-6\">\r\n                <div className=\"grid grid-cols-12 gap-6\">\r\n                  {/* Brand Name */}\r\n                  <div className=\"col-span-6\">\r\n                    <label\r\n                      htmlFor=\"Brand name\"\r\n                      className=\"block text-sm font-medium text-gray-700\"\r\n                    >\r\n                      Brand name\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"brand_name\"\r\n                      id=\"brand_name\"\r\n                      value={brand}\r\n                      onChange={(e) => setBrand(e.target.value)}\r\n                      required\r\n                      autoComplete=\"brand_name\"\r\n                      className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                    />\r\n                  </div>\r\n\r\n                  {/* Country */}\r\n                  <div className=\"col-span-6\">\r\n                    <label\r\n                      htmlFor=\"country\"\r\n                      className=\"block text-sm font-medium text-gray-700\"\r\n                    >\r\n                      Country\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"country\"\r\n                      id=\"country\"\r\n                      value={country}\r\n                      onChange={(e) => {\r\n                        setCountry(e.target.value);\r\n                      }}\r\n                      required\r\n                      autoComplete=\"customer_name\"\r\n                      className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                    />\r\n                  </div>\r\n\r\n                  {/* State */}\r\n                  <div className=\"col-span-6\">\r\n                    <label\r\n                      htmlFor=\"state\"\r\n                      className=\"block text-sm font-medium text-gray-700\"\r\n                    >\r\n                      State\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"state\"\r\n                      id=\"state\"\r\n                      value={_state}\r\n                      onChange={(e) => {\r\n                        set_State(e.target.value);\r\n                      }}\r\n                      required\r\n                      autoComplete=\"state\"\r\n                      className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                    />\r\n                  </div>\r\n\r\n                  {[...Array(rows)].map((_, i) => (\r\n                    <>\r\n                      {/* Order Code */}\r\n                      <div className=\"col-span-2\">\r\n                        <label\r\n                          htmlFor=\"Order Code\"\r\n                          className=\"block text-sm font-medium text-gray-700\"\r\n                        >\r\n                          Order Code\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"order_code\"\r\n                          id=\"order_code\"\r\n                          value={orderCode[i]}\r\n                          onChange={(e) => {\r\n                            let newCode = [...orderCode];\r\n                            newCode[i] = e.target.value;\r\n                            setOrderCode([...newCode]);\r\n                          }}\r\n                          required\r\n                          autoComplete=\"order_code\"\r\n                          className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                        />\r\n                      </div>\r\n\r\n                      {/* Product */}\r\n                      <div className=\"col-span-2\">\r\n                        <label\r\n                          htmlFor=\"product\"\r\n                          className=\"block text-sm font-medium text-gray-700\"\r\n                        >\r\n                          Product\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"product\"\r\n                          id=\"product\"\r\n                          value={product[i]}\r\n                          onChange={(e) => {\r\n                            let newProd = [...product];\r\n                            newProd[i] = e.target.value;\r\n                            setProduct([...newProd]);\r\n                          }}\r\n                          required\r\n                          className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                        />\r\n                      </div>\r\n                      {/* Fabric */}\r\n                      <div className=\"col-span-2\">\r\n                        <label\r\n                          htmlFor=\"fabric\"\r\n                          className=\"block text-sm font-medium text-gray-700\"\r\n                        >\r\n                          Fabric\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"fabric\"\r\n                          id=\"fabric\"\r\n                          value={fabric[i]}\r\n                          onChange={(e) => {\r\n                            let newFab = [...fabric];\r\n                            newFab[i] = e.target.value;\r\n                            setFabric([...newFab]);\r\n                          }}\r\n                          required\r\n                          className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                        />\r\n                      </div>\r\n                      {/* Color */}\r\n                      <div className=\"col-span-2\">\r\n                        <label\r\n                          htmlFor=\"color\"\r\n                          className=\"block text-sm font-medium text-gray-700\"\r\n                        >\r\n                          Color\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"color\"\r\n                          id=\"color\"\r\n                          value={color[i]}\r\n                          onChange={(e) => {\r\n                            let newCol = [...color];\r\n                            newCol[i] = e.target.value;\r\n                            setColor([...newCol]);\r\n                          }}\r\n                          required\r\n                          autoComplete=\"color\"\r\n                          className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                        />\r\n                      </div>\r\n                      {/* Quantity */}\r\n                      <div className=\"col-span-2\">\r\n                        <label\r\n                          htmlFor=\"Quantity\"\r\n                          className=\"block text-sm font-medium text-gray-700\"\r\n                        >\r\n                          Quantity\r\n                        </label>\r\n                        <input\r\n                          type=\"number\"\r\n                          min=\"1\"\r\n                          name=\"quantity\"\r\n                          id=\"quantity\"\r\n                          value={quantity[i]}\r\n                          onChange={(e) => {\r\n                            let newQuan = [...quantity];\r\n                            newQuan[i] = parseInt(e.target.value);\r\n                            setQuantity([...newQuan]);\r\n                          }}\r\n                          required\r\n                          className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                        />\r\n                      </div>\r\n                      {/* Order Status */}\r\n                      <div className=\"col-span-2\">\r\n                        <label\r\n                          htmlFor=\"Order Status\"\r\n                          className=\"block text-sm font-medium text-gray-700\"\r\n                        >\r\n                          Order Status\r\n                        </label>\r\n                        <select\r\n                          name=\"orderStatus\"\r\n                          required\r\n                          value={orderStatus[i]}\r\n                          className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                          onChange={(e) => {\r\n                            let newStatus = [...orderStatus];\r\n                            newStatus[i] = parseInt(e.target.value);\r\n                            //  console.log(\r\n                            //    `orderState :: ${JSON.stringify(newStatus, null)}`\r\n                            //  );\r\n                            setOrderStatus([...newStatus]);\r\n                          }}\r\n                        >\r\n                          <option value={1}>Open</option>\r\n                          <option value={2}>In-Sampling</option>\r\n                          <option value={3}>In-Production</option>\r\n                          <option value={4}>In-Finishing</option>\r\n                          <option value={5}>Closed</option>\r\n                          <option value={6}>Shipped</option>\r\n                        </select>\r\n                      </div>\r\n                    </>\r\n                  ))}\r\n\r\n                  <div className=\"col-span-12\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-pink-600 hover:bg-pink-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-pink-500\"\r\n                      onClick={() => addRow()}\r\n                    >\r\n                      Add +\r\n                    </button>\r\n                    {rows > 1 && (\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => removeRow(rows - 1)}\r\n                        className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-pink-600 hover:bg-pink-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-pink-500 mt-2 ml-5\"\r\n                      >\r\n                        X\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n\r\n                  {/* Order Timeline */}\r\n                  <div className=\"col-span-12\">\r\n                    <label\r\n                      htmlFor=\"Order Time\"\r\n                      className=\"block text-sm font-medium text-gray-700\"\r\n                    >\r\n                      Order Timeline\r\n                    </label>\r\n                    <select\r\n                      name=\"order_timeline\"\r\n                      required\r\n                      className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                      onChange={(e) => {\r\n                        setOrderTimeline(e.target.value);\r\n                      }}\r\n                    >\r\n                      <option\r\n                        value=\"604800\"\r\n                        selected={orderTimeline === 604800}\r\n                      >\r\n                        1 week\r\n                      </option>\r\n                      <option\r\n                        value=\"1209600\"\r\n                        selected={orderTimeline === 1209600}\r\n                      >\r\n                        2 weeks\r\n                      </option>\r\n                      <option\r\n                        value=\"1814400\"\r\n                        selected={orderTimeline === 1814400}\r\n                      >\r\n                        3 weeks\r\n                      </option>\r\n                      <option\r\n                        value=\"2419200\"\r\n                        selected={orderTimeline === 2419200}\r\n                      >\r\n                        4 weeks\r\n                      </option>\r\n                      <option\r\n                        value=\"3024000\"\r\n                        selected={orderTimeline === 3024000}\r\n                      >\r\n                        5 weeks\r\n                      </option>\r\n                      <option\r\n                        value=\"3628800\"\r\n                        selected={orderTimeline === 3628800}\r\n                      >\r\n                        6 weeks\r\n                      </option>\r\n                      <option\r\n                        value=\"4233600\"\r\n                        selected={orderTimeline === 4233600}\r\n                      >\r\n                        7 weeks\r\n                      </option>\r\n                      <option\r\n                        value=\"4838400\"\r\n                        selected={orderTimeline === 4838400}\r\n                      >\r\n                        8 weeks\r\n                      </option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"px-4 py-3 bg-gray-50 text-right sm:px-6\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-pink-600 hover:bg-pink-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-pink-500\"\r\n                >\r\n                  {action}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardOrderCreate;\r\n","F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\Sidebar.js",[],"F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\DashboardMain.js",["180","181","182","183","184"],"import React, { useContext, useEffect } from \"react\";\r\nimport { Context } from \"./Store\";\r\nimport CardLineChart from \"./Cards/CardLineChart.js\";\r\nimport CardBarChart from \"./Cards/CardBarChart.js\";\r\n// import axios from \"../actions/axios\";\r\n// import CardPageVisits from \"./Cards/CardPageVisits.js\";\r\n// import CardSocialTraffic from \"./Cards/CardSocialTraffic.js\";\r\n/* eslint import/no-anonymous-default-export: [2, {\"allowArrowFunction\": true}] */\r\nexport default (props) => {\r\n  //   let salesData = {\r\n  //     currentYear: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  //     prevYear: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  //   };\r\n\r\n  //   let ordersData = {\r\n  //     currentYear: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  //     prevYear: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  //   };\r\n\r\n  //   const loadData = async () => {\r\n  //     const cYear = new Date().getFullYear();\r\n  //     const pYear = new Date().getFullYear() - 1;\r\n\r\n  //     await axios.get(\"/order/all\").then((response) => {\r\n  //       let orders = response.data;\r\n  //       orders.forEach((order) => {\r\n  //         console.log(`quantity :: ${order.quantity}`);\r\n  //         var date = new Date(order.startTime);\r\n  //         var month = date.getMonth();\r\n  //         var year = date.getFullYear();\r\n\r\n  //         if (year === cYear) {\r\n  //           salesData.currentYear[month] += order.quantity;\r\n  //           ordersData.currentYear[month]++;\r\n  //         } else if (year === pYear) {\r\n  //           salesData.prevYear[month] += order.quantity;\r\n  //           ordersData.prevYear[month]++;\r\n  //         }\r\n  //       });\r\n  //     });\r\n  //   };\r\n\r\n  //   const [state, dispatch] = useContext(Context);\r\n  //   useEffect((_) => {\r\n  //     loadData();\r\n  //     dispatch({\r\n  //       type: \"SET_TITLE\",\r\n  //       payload: `Dashboard`,\r\n  //     });\r\n  //   }, []);\r\n  return (\r\n    <></>\r\n    //  <div className=\"w-full px-4 mx-auto -m-16 md:px-10\">\r\n    //    <div className=\"flex flex-wrap\">\r\n    //      <div className=\"w-full px-4 mb-12 xl:w-8/12 xl:mb-0\">\r\n    //        <CardLineChart salesData={salesData} />\r\n    //      </div>\r\n    //      <div className=\"w-full px-4 xl:w-4/12\">\r\n    //        <CardBarChart ordersData={ordersData} />\r\n    //      </div>\r\n    //    </div>\r\n    //    <div className=\"flex flex-wrap mt-4\">\r\n    //          <div className=\"w-full px-4 mb-12 xl:w-8/12 xl:mb-0\">\r\n    //             <CardPageVisits />\r\n    //          </div>\r\n    //          <div className=\"w-full px-4 xl:w-4/12\">\r\n    //             <CardSocialTraffic />\r\n    //          </div>\r\n    //       </div>\r\n    //  </div>\r\n  );\r\n};\r\n","F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\DashboardDepartmentCreate.js",["185","186","187"],"import { useEffect, useContext, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { Context } from \"./Store\";\r\nimport axios from \"../actions/axios\";\r\n\r\naxios.defaults.headers.common[\"Authorization\"] = localStorage.getItem(\"token\");\r\naxios.defaults.headers.common[\"uid\"] = localStorage.getItem(\"user\");\r\n\r\n/* eslint import/no-anonymous-default-export: [2, {\"allowArrowFunction\": true}] */\r\nexport default (props) => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const [action, setAction] = useState(\"Add\");\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  const onSubmit = (e) => {\r\n    if (action === \"Add\") {\r\n      addDepartment(e);\r\n    } else if (action === \"Update\") {\r\n      updateDepartment(e);\r\n    } else {\r\n      alert(\"Unexpected Error Occured.\");\r\n    }\r\n  };\r\n  const addDepartment = async (e) => {\r\n    e.preventDefault();\r\n    await axios\r\n      .post(\"/department/new\", {\r\n        name: name,\r\n        description: description,\r\n      })\r\n      .then((res) => {\r\n        setName(\"\");\r\n        setDescription(\"\");\r\n        navigate(\"/dashboard/departments\");\r\n      });\r\n  };\r\n\r\n  const updateDepartment = async (e) => {\r\n    e.preventDefault();\r\n    await axios\r\n      .post(\"/department/update/\" + id, {\r\n        name: name,\r\n        description: description,\r\n      })\r\n      .then((res) => {\r\n        setName(\"\");\r\n        setDescription(\"\");\r\n        navigate(\"/dashboard/departments\");\r\n      });\r\n  };\r\n\r\n  const [state, dispatch] = useContext(Context);\r\n  useEffect((_) => {\r\n    dispatch({\r\n      type: \"SET_TITLE\",\r\n      payload: `Dashboard / Departments / Create`,\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      setAction(\"Update\");\r\n      axios.get(\"/department/find/\" + id).then((response) => {\r\n        if (response.data) {\r\n          setName(response.data.name);\r\n          setDescription(response.data.description);\r\n        } else {\r\n          alert(\"Unexpected Data Occured while fetching department details\");\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n  return (\r\n    <div class=\"mt-10 sm:mt-0\">\r\n      <div class=\"sm: px-10 md:px-20 lg:px-40 xl:px-64 py-10\">\r\n        <div class=\"mt-5 md:mt-0 md:col-span-2\">\r\n          <form onSubmit={onSubmit} method=\"POST\">\r\n            <div class=\"shadow overflow-hidden w-full sm:rounded-md\">\r\n              <div class=\"px-4 py-5 bg-white sm:p-6\">\r\n                <div class=\"grid grid-cols-6 gap-6\">\r\n                  <div class=\"col-span-6 sm:col-span-4\">\r\n                    <label\r\n                      htmlFor=\"Brand name\"\r\n                      class=\"block text-sm font-medium text-gray-700\"\r\n                    >\r\n                      Department name\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"brand_name\"\r\n                      id=\"brand_name\"\r\n                      value={name}\r\n                      onChange={(e) => {\r\n                        setName(e.target.value);\r\n                      }}\r\n                      autoComplete=\"brand_name\"\r\n                      class=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                    />\r\n                  </div>\r\n                  <div class=\"col-span-6 sm:col-span-4\">\r\n                    <label\r\n                      htmlFor=\"Customer name\"\r\n                      class=\"block text-sm font-medium text-gray-700\"\r\n                    >\r\n                      Department description\r\n                    </label>\r\n                    <textarea\r\n                      type=\"text\"\r\n                      name=\"customer_name\"\r\n                      id=\"customer_name\"\r\n                      value={description}\r\n                      onChange={(e) => {\r\n                        setDescription(e.target.value);\r\n                      }}\r\n                      autoComplete=\"customer_name\"\r\n                      class=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"px-4 py-3 bg-gray-50 text-right sm:px-6\">\r\n                <button\r\n                  type=\"submit\"\r\n                  class=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-pink-600 hover:bg-pink-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-pink-500\"\r\n                >\r\n                  {action}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\DashboardDepartment.js",["188","189","190"],"import { useEffect, useContext, useState } from \"react\";\r\nimport { Context } from \"./Store\";\r\nimport axios from \"../actions/axios\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\naxios.defaults.headers.common[\"Authorization\"] = localStorage.getItem(\"token\");\r\naxios.defaults.headers.common[\"uid\"] = localStorage.getItem(\"user\");\r\n\r\nexport default (props) => {\r\n  const navigate = useNavigate();\r\n  const [departments, setDepartments] = useState([]);\r\n\r\n  const [state, dispatch] = useContext(Context);\r\n\r\n  const loadDepartments = async () => {\r\n    axios.get(\"/department/sync\").then((response) => {\r\n      setDepartments(response.data);\r\n    });\r\n  };\r\n\r\n  const editDepartment = async (department) => {\r\n    navigate(\"/dashboard/departments/edit/\" + department);\r\n  };\r\n\r\n  const deleteDepartment = async (department) => {\r\n    if (window.confirm(\"Are you sure you want to delete this entry?\")) {\r\n      axios\r\n        .post(\r\n          \"/department/delete/\" + department,\r\n          {},\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          setDepartments(\r\n            departments.filter((dep) => {\r\n              return dep._id !== department;\r\n            })\r\n          );\r\n        })\r\n        .catch((err) => {\r\n          alert(\"Unexpected error occured while deleting department\");\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect((_) => {\r\n    dispatch({\r\n      type: \"SET_TITLE\",\r\n      payload: `Dashboard / Orders`,\r\n    });\r\n    loadDepartments();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"relative flex flex-col min-w-0 break-words bg-white w-full mb-6 shadow-lg rounded\">\r\n      <div className=\"rounded-t mb-0 px-4 py-3 border-0\">\r\n        <div className=\"flex flex-wrap items-center\">\r\n          <div className=\"relative w-full px-4 max-w-full flex-grow flex-1\">\r\n            <h3 className=\"font-semibold text-base text-gray-800\">\r\n              Departments\r\n            </h3>\r\n          </div>\r\n          <div className=\"relative w-full px-4 max-w-full flex-grow flex-1 text-right\">\r\n            <Link\r\n              to=\"/dashboard/departments/create\"\r\n              className=\"bg-indigo-500 text-white active:bg-indigo-600 text-xs font-bold uppercase px-3 py-1 rounded outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\r\n              type=\"button\"\r\n            >\r\n              Create New\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"block w-full overflow-x-auto\">\r\n        <table className=\"items-center w-full bg-transparent border-collapse\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"px-6 bg-gray-100 text-gray-600 align-middle border border-solid border-gray-200 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold text-left\">\r\n                #\r\n              </th>\r\n              <th className=\"px-6 bg-gray-100 text-gray-600 align-middle border border-solid border-gray-200 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold text-left\">\r\n                Name\r\n              </th>\r\n              <th className=\"px-6 bg-gray-100 text-gray-600 align-middle border border-solid border-gray-200 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold text-left\">\r\n                Description\r\n              </th>\r\n              <th className=\"px-6 bg-gray-100 text-gray-600 align-middle border border-solid border-gray-200 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold text-left\">\r\n                Actions\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {departments.length > 0 &&\r\n              departments.map((department, index) => (\r\n                <tr key={index}>\r\n                  <th className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4 text-left\">\r\n                    {index + 1}\r\n                  </th>\r\n                  <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4\">\r\n                    {department.name}\r\n                  </td>\r\n                  <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4\">\r\n                    {department.description}\r\n                  </td>\r\n                  <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4\">\r\n                    <button\r\n                      className=\"bg-indigo-500 text-white active:bg-indigo-600 text-xs font-bold uppercase px-3 py-1 rounded outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\r\n                      type=\"button\"\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        editDepartment(department._id);\r\n                      }}\r\n                    >\r\n                      Edit\r\n                    </button>\r\n\r\n                    <button\r\n                      className=\"bg-indigo-500 text-white active:bg-indigo-600 text-xs font-bold uppercase px-3 py-1 rounded outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\r\n                      type=\"button\"\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        deleteDepartment(department._id);\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\Chat.js",["191","192","193","194","195","196"],"import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport image from \"../assets/icons/image.svg\";\r\nimport send from \"../assets/icons/send.svg\";\r\nimport Pusher from \"pusher-js\";\r\nimport axios from \"../actions/axios\";\r\nimport hdate from \"human-date\";\r\n\r\naxios.defaults.headers.common[\"Authorization\"] = localStorage.getItem(\"token\");\r\naxios.defaults.headers.common[\"uid\"] = localStorage.getItem(\"user\");\r\n\r\n/* eslint import/no-anonymous-default-export: [2, {\"allowArrowFunction\": true}] */\r\nexport default ({ order_id, phase }) => {\r\n  const navigate = useNavigate();\r\n  const [messages, setMessages] = useState([]);\r\n  const [user, setUser] = useState({ name: \"null\" });\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let user = localStorage.getItem(\"user\");\r\n\r\n    if (user) {\r\n      axios\r\n        .post(\r\n          \"/auth/user\",\r\n          { userId: user },\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          setUser(res.data);\r\n        })\r\n        .catch((err) => {\r\n          navigate(\"/logout\");\r\n        });\r\n    } else {\r\n      navigate(\"/logout\");\r\n    }\r\n  }, []);\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n    let allowSend = false;\r\n    if (input.trim() != \"\") {\r\n      allowSend = true;\r\n    }\r\n    let formData = new FormData();\r\n\r\n    let array = document.getElementById(\"file\").files;\r\n\r\n    if (array.length > 0) {\r\n      for (var i = 0; i < array.length; i++) {\r\n        console.log(\"appending\", array[i]);\r\n        allowSend = true;\r\n        formData.append(\"files\", array[i]);\r\n      }\r\n    }\r\n\r\n    var d = new Date();\r\n\r\n    formData.append(\"sender\", user.name);\r\n    formData.append(\"time\", d.getTime());\r\n    formData.append(\"content\", input);\r\n    formData.append(\"order\", order_id);\r\n    formData.append(\"phase\", phase);\r\n    if (allowSend) {\r\n      await axios.post(\"/chat/new\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      });\r\n    }\r\n\r\n    setInput(\"\");\r\n    document.getElementById(\"file\").value = \"\";\r\n    document.getElementById(\"fileMessage\").innerText = \"\";\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios.get(\"/chat/sync/\" + order_id).then((msgs) => {\r\n      let arr = msgs.data.reduce((r, a) => {\r\n        r[a.phase] = r[a.phase] || [];\r\n        r[a.phase].push(a);\r\n        return r;\r\n      }, Object.create(null));\r\n      setMessages(arr);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const pusher = new Pusher(\"529cf8119f342b5e04b2\", {\r\n      cluster: \"ap2\",\r\n    });\r\n\r\n    const channel = pusher.subscribe(\"messages\");\r\n    channel.bind(\"inserted\", function (data) {\r\n      if (messages[phase]) {\r\n        setMessages({ ...messages, [phase]: [data, ...messages[phase]] });\r\n      }\r\n    });\r\n    return () => {\r\n      channel.unbind_all();\r\n      channel.unsubscribe();\r\n    };\r\n  }, [messages, phase]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"messages\", messages[phase], phase);\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    if (!messages[phase]) {\r\n      messages[phase] = [];\r\n    }\r\n  }, [phase]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"flex flex-col-reverse flex-1 overflow-y-auto\">\r\n        {messages[phase] &&\r\n          messages[phase].length > 0 &&\r\n          messages[phase].map((message) => (\r\n            <div className=\"flex px-4 py-3 gap-x-4 hover:bg-gray-100 hover:shadow\">\r\n              <div className=\"flex justify-center\">\r\n                <img\r\n                  src={\r\n                    \"https://images.unsplash.com/photo-1603415526960-f7e0328c63b1?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80\"\r\n                  }\r\n                  alt=\"pic\"\r\n                  className=\"w-8 h-8 bg-gray-200 rounded-full\"\r\n                />\r\n              </div>\r\n              <div className=\"flex flex-col\">\r\n                <div className=\"flex items-center gap-x-3\">\r\n                  <h1 className=\"text-lg font-semibold\">{message.sender}</h1>\r\n                  <span className=\"-mb-1 text-sm text-gray-400\">\r\n                    {hdate.relativeTime(message.time)}\r\n                  </span>\r\n                </div>\r\n                {message.content}\r\n                <div className=\"flex flex-wrap gap-2 py-2\">\r\n                  {message.images.map((file) =>\r\n                    file.indexOf(\".pdf\") !== -1 ? (\r\n                      <a target=\"_blank\" href={`http://localhost:9000/${file}`}>\r\n                        <img\r\n                          src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/8/87/PDF_file_icon.svg/1200px-PDF_file_icon.svg.png\"\r\n                          className=\"w-24 h-24 rounded-sm\"\r\n                          alt={file}\r\n                        />\r\n                      </a>\r\n                    ) : (\r\n                      <img\r\n                        src={`http://localhost:9000/${file}`}\r\n                        alt=\"img\"\r\n                        className=\"w-24 h-24 rounded-sm\"\r\n                      />\r\n                    )\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n      </div>\r\n      <div className=\"relative mx-4\">\r\n        <form method=\"POST\" onSubmit={sendMessage}>\r\n          <input\r\n            type=\"text\"\r\n            value={input}\r\n            onChange={(e) => {\r\n              setInput(e.target.value);\r\n            }}\r\n            className=\"w-full py-4 pl-16 pr-12 text-gray-800 bg-gray-200 rounded-sm focus:outline-none focus:bg-white focus:ring-2 ring-gray-500\"\r\n          ></input>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"absolute top-0 right-0 mt-3 mr-4 text-gray-500 hover:text-indigo-600 focus:outline-none focus:text-indigo-600\"\r\n          >\r\n            <SVG src={send} className=\"w-8 h-8 fill-current\" />\r\n          </button>\r\n        </form>\r\n        <div id=\"fileMessage\"></div>\r\n        <div className=\"group\">\r\n          <input\r\n            type=\"file\"\r\n            onChange={(e) => {\r\n              document.getElementById(\"fileMessage\").innerText =\r\n                e.target.files.length + \" files selected\";\r\n            }}\r\n            multiple\r\n            id=\"file\"\r\n            className=\"hidden\"\r\n          />\r\n          <button\r\n            onClick={() => document.getElementById(\"file\").click()}\r\n            className=\"absolute top-0 left-0 z-10 mt-3 ml-3 text-gray-500 group-hover:text-white focus:outline-none focus:text-gray-800\"\r\n          >\r\n            <SVG src={image} className=\"w-8 h-8 fill-current \" />\r\n          </button>\r\n          <div className=\"absolute top-0 left-0 h-full rounded-l-sm group-hover:bg-gray-500 w-14\" />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\DashboardUsersCreate.js",["197","198","199","200","201","202"],"import { useEffect, useContext, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { Listbox, Transition } from \"@headlessui/react\";\r\nimport { Context } from \"./Store\";\r\nimport axios from \"../actions/axios\";\r\n\r\naxios.defaults.headers.common[\"Authorization\"] = localStorage.getItem(\"token\");\r\naxios.defaults.headers.common[\"uid\"] = localStorage.getItem(\"user\");\r\n\r\n\r\nexport default (props) => {\r\n\r\n    const { id } = useParams();\r\n    const navigate = useNavigate();\r\n\r\n    const [action, setAction] = useState('Add');\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n    const [department, setDepartment] = useState('');\r\n    const [departmentName, setDepartmentName] = useState('Choose a department');\r\n\r\n    const [deps, setDeps] = useState([]);\r\n\r\n    const getDepartmentName = (selected) => {\r\n\r\n        let ret = 'Choose a department';\r\n        deps.forEach(dep => {\r\n            if (dep._id === selected) {\r\n                ret = dep.name;\r\n            }\r\n\r\n        });\r\n        return ret;\r\n    }\r\n    const onDepartmentSelected = (e) => { setDepartment(e); setDepartmentName(getDepartmentName(e)); }\r\n\r\n    const onSubmit = (e) => {\r\n        if (action === 'Add') {\r\n            addUser(e);\r\n        } else if (action === 'Update') {\r\n            updateUser(e);\r\n        } else {\r\n            alert('Unexpected Error Occured.');\r\n        }\r\n    }\r\n\r\n    const addUser = async (e) => {\r\n        e.preventDefault();\r\n        await axios.post('/users/new', {\r\n            name: name,\r\n            email: email,\r\n            password: password,\r\n            isAdmin: isAdmin,\r\n            department: department\r\n        }).then((res) => {\r\n            navigate('/dashboard/users');\r\n        }).catch((err) => {\r\n            alert('Unexpected Error Occured While Adding User');\r\n        });\r\n\r\n    };\r\n\r\n    const updateUser = async (e) => {\r\n        e.preventDefault();\r\n        await axios.post('/users/update/' + id, {\r\n            name: name,\r\n            password: password,\r\n            isAdmin: isAdmin,\r\n            department: department\r\n        }).then((res) => {\r\n            navigate('/dashboard/users');\r\n        }).catch((err) => {\r\n            alert('Unexpected Error Occured while updating user');\r\n        });;\r\n    }\r\n\r\n    const [state, dispatch] = useContext(Context);\r\n    useEffect(_ => {\r\n        dispatch({\r\n            type: \"SET_TITLE\",\r\n            payload: `Dashboard / Departments / Create`,\r\n        });\r\n\r\n    }, []);\r\n\r\n    useEffect(async () => {\r\n        await axios.get('/department/sync').then(\r\n            (response) => {\r\n                console.log(response.data);\r\n                setDeps(response.data);\r\n\r\n            }\r\n        ).catch(err => {\r\n            alert('Error occured while fetching departments');\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            setAction('Update');\r\n            axios.get('/users/find/' + id).then(\r\n                (response) => {\r\n                    if (response.data) {\r\n                        setName(response.data.name);\r\n                        setEmail(response.data.email);\r\n                        setIsAdmin(response.data.isAdmin);\r\n                        setDepartment(response.data.department);\r\n                    } else {\r\n                        alert('Unexpected Error Occured while fetching user details');\r\n                    }\r\n                }\r\n            ).catch(err => {\r\n                alert('Unexpected Error')\r\n            });\r\n        }\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <div class=\"mt-10 sm:mt-0\">\r\n            <div class=\"sm: px-10 md:px-20 lg:px-40 xl:px-64 py-10\">\r\n                <div class=\"mt-5 md:mt-0 md:col-span-2\">\r\n                    <form onSubmit={onSubmit} method=\"POST\">\r\n                        <div class=\"shadow overflow-hidden w-full sm:rounded-md\">\r\n                            <div class=\"px-4 py-5 bg-white sm:p-6\">\r\n                                <div class=\"grid grid-cols-6 gap-6\">\r\n\r\n                                    <div class=\"col-span-6 sm:col-span-4\">\r\n                                        <label\r\n                                            htmlFor=\"name\"\r\n                                            class=\"block text-sm font-medium text-gray-700\"\r\n                                        >\r\n                                            Name\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"name\"\r\n                                            id=\"name\"\r\n                                            value={name}\r\n                                            onChange={(e) => { setName(e.target.value) }}\r\n                                            required\r\n                                            autoComplete=\"name\"\r\n                                            class=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div class=\"col-span-6 sm:col-span-4\">\r\n                                        <label\r\n                                            htmlFor=\"name\"\r\n                                            class=\"block text-sm font-medium text-gray-700\"\r\n                                        >\r\n                                            Email\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"email\"\r\n                                            id=\"email\"\r\n                                            value={email}\r\n                                            onChange={(e) => { setEmail(e.target.value) }}\r\n                                            required\r\n                                            autoComplete=\"email\"\r\n                                            class=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                                            disabled={ action=='Add' ? false:true}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div class=\"col-span-6 sm:col-span-4\">\r\n                                        <label\r\n                                            htmlFor=\"password\"\r\n                                            class=\"block text-sm font-medium text-gray-700\"\r\n                                        >\r\n                                            Password\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            name=\"password\"\r\n                                            id=\"password\"\r\n                                            value={password}\r\n                                            required\r\n                                            onChange={(e) => { setPassword(e.target.value) }}\r\n                                            autoComplete=\"password\"\r\n                                            class=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div class=\"col-span-6 sm:col-span-4\">\r\n                                        <label\r\n                                            htmlFor=\"isAdmin\"\r\n                                            class=\"block text-sm font-medium text-gray-700\"\r\n                                        >\r\n                                            User Type\r\n                                        </label>\r\n\r\n                                        <select onChange={(e) => { setIsAdmin(e.target.value) }}\r\n                                            class=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                                            name=\"isAdmin\" required>\r\n                                            <option value=\"false\">Simple User</option>\r\n                                            <option value=\"true\">Administrator</option>\r\n                                        </select>\r\n\r\n                                    </div>\r\n\r\n                                    <div class=\"col-span-6 sm:col-span-4\">\r\n\r\n                                        <Listbox\r\n                                            as=\"div\"\r\n                                            className=\"h-10\"\r\n                                            onChange={onDepartmentSelected}\r\n                                        >\r\n                                            {({ open }) => (\r\n                                                <>\r\n\r\n                                                    <Listbox.Label className=\"block font-medium leading-5 text-gray-700\">\r\n                                                        Choose Department\r\n                                                    </Listbox.Label>\r\n\r\n                                                    <div className=\"relative py-2\">\r\n                                                        <span className=\"inline-block w-full rounded-md shadow-sm\">\r\n                                                            <Listbox.Button className=\"relative w-full py-2 pl-3 pr-10 text-left transition duration-150 ease-in-out bg-white border border-gray-300 rounded-md cursor-default focus:outline-none focus:shadow-outline-blue focus:border-blue-300 sm:text-sm sm:leading-5\">\r\n                                                                <span className=\"block truncate\">\r\n                                                                    {departmentName}\r\n                                                                </span>\r\n                                                                <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\r\n                                                                    <svg\r\n                                                                        className=\"w-5 h-5 text-gray-400\"\r\n                                                                        viewBox=\"0 0 20 20\"\r\n                                                                        fill=\"none\"\r\n                                                                        stroke=\"currentColor\"\r\n                                                                    >\r\n                                                                        <path\r\n                                                                            d=\"M7 7l3-3 3 3m0 6l-3 3-3-3\"\r\n                                                                            strokeWidth=\"1.5\"\r\n                                                                            strokeLinecap=\"round\"\r\n                                                                            strokeLinejoin=\"round\"\r\n                                                                        />\r\n                                                                    </svg>\r\n                                                                </span>\r\n                                                            </Listbox.Button>\r\n                                                        </span>\r\n\r\n                                                        <Transition\r\n                                                            show={open}\r\n                                                            leave=\"transition ease-in duration-100\"\r\n                                                            leaveFrom=\"opacity-100\"\r\n                                                            leaveTo=\"opacity-0\"\r\n                                                            className=\"absolute z-10 w-full mt-1 bg-white rounded-md shadow-lg\"\r\n                                                        >\r\n                                                            <Listbox.Options\r\n                                                                static\r\n                                                                className=\"py-1 overflow-auto text-base leading-6 rounded-md shadow-xs max-h-60 focus:outline-none sm:text-sm sm:leading-5\"\r\n                                                            >\r\n                                                                {deps.map((dep, index) => (\r\n                                                                    <Listbox.Option key={index} value={dep._id}>\r\n                                                                        {({ selected, active }) => (\r\n                                                                            <div\r\n                                                                                className={`${active\r\n                                                                                    ? \"text-white bg-blue-600\"\r\n                                                                                    : \"text-gray-900\"\r\n                                                                                    } cursor-default select-none relative py-2 pl-8 pr-4`}\r\n                                                                            >\r\n                                                                                <span\r\n                                                                                    className={`${selected\r\n                                                                                        ? \"font-semibold\"\r\n                                                                                        : \"font-normal\"\r\n                                                                                        } block truncate`}\r\n                                                                                >\r\n                                                                                    {dep.name}\r\n                                                                                </span>\r\n                                                                                {selected && (\r\n                                                                                    <span\r\n                                                                                        className={`${active\r\n                                                                                            ? \"text-white\"\r\n                                                                                            : \"text-blue-600\"\r\n                                                                                            } absolute inset-y-0 left-0 flex items-center pl-1.5`}\r\n                                                                                    >\r\n                                                                                        <svg\r\n                                                                                            className=\"w-5 h-5\"\r\n                                                                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                                                            viewBox=\"0 0 20 20\"\r\n                                                                                            fill=\"currentColor\"\r\n                                                                                        >\r\n                                                                                            <path\r\n                                                                                                fillRule=\"evenodd\"\r\n                                                                                                d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\r\n                                                                                                clipRule=\"evenodd\"\r\n                                                                                            />\r\n                                                                                        </svg>\r\n                                                                                    </span>\r\n                                                                                )}\r\n                                                                            </div>\r\n                                                                        )}\r\n                                                                    </Listbox.Option>\r\n                                                                ))}\r\n                                                            </Listbox.Options>\r\n                                                        </Transition>\r\n                                                    </div>\r\n                                                </>\r\n                                            )}\r\n                                        </Listbox>\r\n\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"px-4 py-3 bg-gray-50 text-right sm:px-6\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    class=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-pink-600 hover:bg-pink-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-pink-500\"\r\n                                >\r\n                                    {action}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\DashboardUsers.js",["203","204","205"],"import { useEffect, useContext, useState } from \"react\";\r\nimport { Context } from \"./Store\";\r\nimport axios from \"../actions/axios\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\naxios.defaults.headers.common[\"Authorization\"] = localStorage.getItem(\"token\");\r\naxios.defaults.headers.common[\"uid\"] = localStorage.getItem(\"user\");\r\n\r\nexport default (props) => {\r\n  const navigate = useNavigate();\r\n\r\n  const [users, setUsers] = useState([]);\r\n\r\n  const [state, dispatch] = useContext(Context);\r\n\r\n  const loadUsers = async () => {\r\n    axios.get(\"/users/sync\").then((response) => {\r\n      setUsers(response.data);\r\n    });\r\n  };\r\n\r\n  const editUser = async (user) => {\r\n    navigate(\"/dashboard/users/edit/\" + user);\r\n  };\r\n\r\n  const deleteUser = async (user) => {\r\n    if (window.confirm(\"Are you sure you want to delete this user?\")) {\r\n      axios\r\n        .post(\r\n          \"/users/delete/\" + user,\r\n          {},\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          setUsers(\r\n            users.filter((item) => {\r\n              return item._id !== user;\r\n            })\r\n          );\r\n        })\r\n        .catch((err) => {\r\n          alert(\"Unexpected error occured while deleting user\");\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect((_) => {\r\n    dispatch({\r\n      type: \"SET_TITLE\",\r\n      payload: `Dashboard / Users`,\r\n    });\r\n    loadUsers();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"relative flex flex-col min-w-0 break-words bg-white w-full mb-6 shadow-lg rounded\">\r\n      <div className=\"rounded-t mb-0 px-4 py-3 border-0\">\r\n        <div className=\"flex flex-wrap items-center\">\r\n          <div className=\"relative w-full px-4 max-w-full flex-grow flex-1\">\r\n            <h3 className=\"font-semibold text-base text-gray-800\">Users</h3>\r\n          </div>\r\n          <div className=\"relative w-full px-4 max-w-full flex-grow flex-1 text-right\">\r\n            <Link\r\n              to=\"/dashboard/users/create\"\r\n              className=\"bg-indigo-500 text-white active:bg-indigo-600 text-xs font-bold uppercase px-3 py-1 rounded outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\r\n              type=\"button\"\r\n            >\r\n              Create New\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"block w-full overflow-x-auto\">\r\n        <table className=\"items-center w-full bg-transparent border-collapse\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"px-6 bg-gray-100 text-gray-600 align-middle border border-solid border-gray-200 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold text-left\">\r\n                #\r\n              </th>\r\n              <th className=\"px-6 bg-gray-100 text-gray-600 align-middle border border-solid border-gray-200 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold text-left\">\r\n                Name\r\n              </th>\r\n              <th className=\"px-6 bg-gray-100 text-gray-600 align-middle border border-solid border-gray-200 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold text-left\">\r\n                Email\r\n              </th>\r\n\r\n              <th className=\"px-6 bg-gray-100 text-gray-600 align-middle border border-solid border-gray-200 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold text-left\">\r\n                Type\r\n              </th>\r\n              <th className=\"px-6 bg-gray-100 text-gray-600 align-middle border border-solid border-gray-200 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold text-left\">\r\n                Actions\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.length > 0 &&\r\n              users.map((user, index) => (\r\n                <tr key={index}>\r\n                  <th className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4 text-left\">\r\n                    {index + 1}\r\n                  </th>\r\n                  <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4\">\r\n                    {user.name}\r\n                  </td>\r\n                  <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4\">\r\n                    {user.email}\r\n                  </td>\r\n                  <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4\">\r\n                    {user.isAdmin ? \"Administrator\" : \"User\"}\r\n                  </td>\r\n                  <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4\">\r\n                    <button\r\n                      className=\"bg-indigo-500 text-white active:bg-indigo-600 text-xs font-bold uppercase px-3 py-1 rounded outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\r\n                      type=\"button\"\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        editUser(user._id);\r\n                      }}\r\n                    >\r\n                      Edit\r\n                    </button>\r\n\r\n                    <button\r\n                      className=\"bg-indigo-500 text-white active:bg-indigo-600 text-xs font-bold uppercase px-3 py-1 rounded outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\r\n                      type=\"button\"\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        deleteUser(user._id);\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\Cards\\CardStats.js",[],"F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\Cards\\CardLineChart.js",["206"],"import React from \"react\";\r\nimport Chart from \"chart.js\";\r\n\r\nexport default function CardLineChart({ salesData }) {\r\n   React.useEffect(() => {\r\n      var config = {\r\n         type: \"line\",\r\n         data: {\r\n            labels: [\r\n               \"Jan\",\r\n               \"Feb\",\r\n               \"Mar\",\r\n               \"Apr\",\r\n               \"May\",\r\n               \"Jun\",\r\n               \"Jul\",\r\n               \"Aug\",\r\n               \"Sep\",\r\n               \"Oct\",\r\n               \"Nov\",\r\n               \"Dec\",\r\n            ],\r\n            datasets: [\r\n               {\r\n                  label: new Date().getFullYear(),\r\n                  backgroundColor: \"#4c51bf\",\r\n                  borderColor: \"#4c51bf\",\r\n                  data: salesData.currentYear,\r\n                  fill: false,\r\n               },\r\n               {\r\n                  label: new Date().getFullYear() - 1,\r\n                  fill: false,\r\n                  backgroundColor: \"#fff\",\r\n                  borderColor: \"#fff\",\r\n                  data: salesData.prevData,\r\n               },\r\n            ],\r\n         },\r\n         options: {\r\n            maintainAspectRatio: true,\r\n            responsive: true,\r\n            title: {\r\n               display: false,\r\n               text: \"Sales Charts\",\r\n               fontColor: \"white\",\r\n            },\r\n            legend: {\r\n               labels: {\r\n                  fontColor: \"white\",\r\n               },\r\n               align: \"end\",\r\n               position: \"bottom\",\r\n            },\r\n            tooltips: {\r\n               mode: \"index\",\r\n               intersect: false,\r\n            },\r\n            hover: {\r\n               mode: \"nearest\",\r\n               intersect: true,\r\n            },\r\n            scales: {\r\n               xAxes: [\r\n                  {\r\n                     ticks: {\r\n                        fontColor: \"rgba(255,255,255,.7)\",\r\n                     },\r\n                     display: true,\r\n                     scaleLabel: {\r\n                        display: false,\r\n                        labelString: \"Month\",\r\n                        fontColor: \"white\",\r\n                     },\r\n                     gridLines: {\r\n                        display: false,\r\n                        borderDash: [2],\r\n                        borderDashOffset: [2],\r\n                        color: \"rgba(33, 37, 41, 0.3)\",\r\n                        zeroLineColor: \"rgba(0, 0, 0, 0)\",\r\n                        zeroLineBorderDash: [2],\r\n                        zeroLineBorderDashOffset: [2],\r\n                     },\r\n                  },\r\n               ],\r\n               yAxes: [\r\n                  {\r\n                     ticks: {\r\n                        fontColor: \"rgba(255,255,255,.7)\",\r\n                     },\r\n                     display: true,\r\n                     scaleLabel: {\r\n                        display: false,\r\n                        labelString: \"Value\",\r\n                        fontColor: \"white\",\r\n                     },\r\n                     gridLines: {\r\n                        borderDash: [3],\r\n                        borderDashOffset: [3],\r\n                        drawBorder: false,\r\n                        color: \"rgba(255, 255, 255, 0.15)\",\r\n                        zeroLineColor: \"rgba(33, 37, 41, 0)\",\r\n                        zeroLineBorderDash: [2],\r\n                        zeroLineBorderDashOffset: [2],\r\n                     },\r\n                  },\r\n               ],\r\n            },\r\n         },\r\n      };\r\n      var ctx = document.getElementById(\"line-chart\").getContext(\"2d\");\r\n      window.myLine = new Chart(ctx, config);\r\n   }, []);\r\n   return (\r\n      <>\r\n         <div className=\"relative flex flex-col w-full min-w-0 mb-6 break-words bg-gray-800 rounded shadow-lg\">\r\n            <div className=\"px-4 py-3 mb-0 bg-transparent rounded-t\">\r\n               <div className=\"flex flex-wrap items-center\">\r\n                  <div className=\"relative flex-1 flex-grow w-full max-w-full\">\r\n                     <h6 className=\"mb-1 text-xs font-semibold text-gray-200 uppercase\">\r\n                        Overview\r\n                     </h6>\r\n                     <h2 className=\"text-xl font-semibold text-white\">\r\n                        Sales value\r\n                     </h2>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n            <div className=\"flex-auto p-4\">\r\n               {/* Chart */}\r\n               <div className=\"relative h-350-px\">\r\n                  <canvas id=\"line-chart\"></canvas>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n}\r\n","F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\Cards\\CardBarChart.js",["207"],"import React from \"react\";\r\nimport Chart from \"chart.js\";\r\n\r\nexport default function CardBarChart({ ordersData }) {\r\n   React.useEffect(() => {\r\n      let config = {\r\n         type: \"bar\",\r\n         data: {\r\n            labels: [\r\n               \"Jan\",\r\n               \"Feb\",\r\n               \"Mar\",\r\n               \"Apr\",\r\n               \"May\",\r\n               \"Jun\",\r\n               \"Jul\",\r\n               \"Aug\",\r\n               \"Sep\",\r\n               \"Oct\",\r\n               \"Nov\",\r\n               \"Dec\",\r\n            ],\r\n            datasets: [\r\n               {\r\n                  label: new Date().getFullYear(),\r\n                  backgroundColor: \"#ed64a6\",\r\n                  borderColor: \"#ed64a6\",\r\n                  data: ordersData.currentYear,\r\n                  fill: false,\r\n                  barThickness: 8,\r\n               },\r\n               {\r\n                  label: new Date().getFullYear() - 1,\r\n                  fill: false,\r\n                  backgroundColor: \"#4c51bf\",\r\n                  borderColor: \"#4c51bf\",\r\n                  data: ordersData.prevYear,\r\n                  barThickness: 8,\r\n               },\r\n            ],\r\n         },\r\n         options: {\r\n            maintainAspectRatio: true,\r\n            responsive: true,\r\n            title: {\r\n               display: false,\r\n               text: \"Orders Chart\",\r\n            },\r\n            tooltips: {\r\n               mode: \"index\",\r\n               intersect: false,\r\n            },\r\n            hover: {\r\n               mode: \"nearest\",\r\n               intersect: true,\r\n            },\r\n            legend: {\r\n               labels: {\r\n                  fontColor: \"rgba(0,0,0,.4)\",\r\n               },\r\n               align: \"end\",\r\n               position: \"bottom\",\r\n            },\r\n            scales: {\r\n               xAxes: [\r\n                  {\r\n                     display: false,\r\n                     scaleLabel: {\r\n                        display: true,\r\n                        labelString: \"Month\",\r\n                     },\r\n                     gridLines: {\r\n                        borderDash: [2],\r\n                        borderDashOffset: [2],\r\n                        color: \"rgba(33, 37, 41, 0.3)\",\r\n                        zeroLineColor: \"rgba(33, 37, 41, 0.3)\",\r\n                        zeroLineBorderDash: [2],\r\n                        zeroLineBorderDashOffset: [2],\r\n                     },\r\n                  },\r\n               ],\r\n               yAxes: [\r\n                  {\r\n                     display: true,\r\n                     scaleLabel: {\r\n                        display: false,\r\n                        labelString: \"Value\",\r\n                     },\r\n                     gridLines: {\r\n                        borderDash: [2],\r\n                        drawBorder: false,\r\n                        borderDashOffset: [2],\r\n                        color: \"rgba(33, 37, 41, 0.2)\",\r\n                        zeroLineColor: \"rgba(33, 37, 41, 0.15)\",\r\n                        zeroLineBorderDash: [2],\r\n                        zeroLineBorderDashOffset: [2],\r\n                     },\r\n                  },\r\n               ],\r\n            },\r\n         },\r\n      };\r\n      let ctx = document.getElementById(\"bar-chart\").getContext(\"2d\");\r\n      window.myBar = new Chart(ctx, config);\r\n   }, []);\r\n   return (\r\n      <>\r\n         <div className=\"relative flex flex-col w-full min-w-0 mb-6 break-words bg-white rounded shadow-lg\">\r\n            <div className=\"px-4 py-3 mb-0 bg-transparent rounded-t\">\r\n               <div className=\"flex flex-wrap items-center\">\r\n                  <div className=\"relative flex-1 flex-grow w-full max-w-full\">\r\n                     <h6 className=\"mb-1 text-xs font-semibold text-gray-500 uppercase\">\r\n                        Performance\r\n                     </h6>\r\n                     <h2 className=\"text-xl font-semibold text-gray-800\">\r\n                        Orders\r\n                     </h2>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n            <div className=\"flex-auto p-4\">\r\n               {/* Chart */}\r\n               <div className=\"relative h-64\">\r\n                  <canvas id=\"bar-chart\"></canvas>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </>\r\n   );\r\n}\r\n","F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\Dropdowns\\UserDropdown.js",[],"F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\Dropdowns\\NotificationDropdown.js",[],"F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\ForumModal.js",[],"F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\Modal.js",[],"F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\hooks\\useModal.js",[],["208","209"],"F:\\Spring 2022\\WP\\Project\\apparelisland-local\\client\\src\\components\\Empty.js",[],{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","severity":1,"message":"215","line":8,"column":8,"nodeType":"216","messageId":"217","endLine":8,"endColumn":13},{"ruleId":"218","severity":1,"message":"219","line":12,"column":1,"nodeType":"220","endLine":46,"endColumn":3},{"ruleId":"218","severity":1,"message":"219","line":18,"column":1,"nodeType":"220","endLine":230,"endColumn":3},{"ruleId":"214","severity":1,"message":"221","line":19,"column":10,"nodeType":"216","messageId":"217","endLine":19,"endColumn":15},{"ruleId":"222","severity":1,"message":"223","line":37,"column":25,"nodeType":"224","messageId":"225","endLine":37,"endColumn":27},{"ruleId":"222","severity":1,"message":"226","line":51,"column":19,"nodeType":"224","messageId":"225","endLine":51,"endColumn":21},{"ruleId":"222","severity":1,"message":"223","line":71,"column":33,"nodeType":"224","messageId":"225","endLine":71,"endColumn":35},{"ruleId":"222","severity":1,"message":"226","line":87,"column":37,"nodeType":"224","messageId":"225","endLine":87,"endColumn":39},{"ruleId":"227","severity":1,"message":"228","line":112,"column":6,"nodeType":"229","endLine":112,"endColumn":8,"suggestions":"230"},{"ruleId":"227","severity":1,"message":"231","line":123,"column":6,"nodeType":"229","endLine":123,"endColumn":8,"suggestions":"232"},{"ruleId":"218","severity":1,"message":"219","line":21,"column":1,"nodeType":"220","endLine":101,"endColumn":3},{"ruleId":"227","severity":1,"message":"233","line":39,"column":6,"nodeType":"229","endLine":39,"endColumn":13,"suggestions":"234"},{"ruleId":"227","severity":1,"message":"235","line":53,"column":6,"nodeType":"229","endLine":53,"endColumn":8,"suggestions":"236"},{"ruleId":"222","severity":1,"message":"226","line":74,"column":22,"nodeType":"224","messageId":"225","endLine":74,"endColumn":24},{"ruleId":"218","severity":1,"message":"219","line":13,"column":1,"nodeType":"220","endLine":193,"endColumn":3},{"ruleId":"227","severity":1,"message":"233","line":83,"column":7,"nodeType":"229","endLine":83,"endColumn":14,"suggestions":"237"},{"ruleId":"227","severity":1,"message":"235","line":90,"column":7,"nodeType":"229","endLine":90,"endColumn":9,"suggestions":"238"},{"ruleId":"222","severity":1,"message":"226","line":104,"column":31,"nodeType":"224","messageId":"225","endLine":104,"endColumn":33},{"ruleId":"214","severity":1,"message":"239","line":16,"column":17,"nodeType":"216","messageId":"217","endLine":16,"endColumn":25},{"ruleId":"227","severity":1,"message":"240","line":55,"column":6,"nodeType":"229","endLine":55,"endColumn":13,"suggestions":"241"},{"ruleId":"218","severity":1,"message":"219","line":10,"column":1,"nodeType":"220","endLine":508,"endColumn":3},{"ruleId":"214","severity":1,"message":"221","line":31,"column":10,"nodeType":"216","messageId":"217","endLine":31,"endColumn":15},{"ruleId":"222","severity":1,"message":"226","line":66,"column":19,"nodeType":"224","messageId":"225","endLine":66,"endColumn":21},{"ruleId":"222","severity":1,"message":"226","line":66,"column":36,"nodeType":"224","messageId":"225","endLine":66,"endColumn":38},{"ruleId":"222","severity":1,"message":"226","line":66,"column":51,"nodeType":"224","messageId":"225","endLine":66,"endColumn":53},{"ruleId":"227","severity":1,"message":"242","line":96,"column":6,"nodeType":"229","endLine":96,"endColumn":14,"suggestions":"243"},{"ruleId":"227","severity":1,"message":"235","line":103,"column":6,"nodeType":"229","endLine":103,"endColumn":8,"suggestions":"244"},{"ruleId":"227","severity":1,"message":"245","line":130,"column":6,"nodeType":"229","endLine":130,"endColumn":12,"suggestions":"246"},{"ruleId":"222","severity":1,"message":"226","line":152,"column":22,"nodeType":"224","messageId":"225","endLine":152,"endColumn":24},{"ruleId":"247","severity":1,"message":"248","line":395,"column":15,"nodeType":"249","endLine":398,"endColumn":16},{"ruleId":"247","severity":1,"message":"248","line":401,"column":15,"nodeType":"249","endLine":404,"endColumn":16},{"ruleId":"247","severity":1,"message":"250","line":430,"column":21,"nodeType":"249","endLine":436,"endColumn":22},{"ruleId":"247","severity":1,"message":"250","line":460,"column":23,"nodeType":"249","endLine":470,"endColumn":24},{"ruleId":"222","severity":1,"message":"223","line":466,"column":32,"nodeType":"224","messageId":"225","endLine":466,"endColumn":34},{"ruleId":"247","severity":1,"message":"250","line":477,"column":21,"nodeType":"249","endLine":483,"endColumn":22},{"ruleId":"214","severity":1,"message":"251","line":4,"column":10,"nodeType":"216","messageId":"217","endLine":4,"endColumn":18},{"ruleId":"214","severity":1,"message":"252","line":15,"column":10,"nodeType":"216","messageId":"217","endLine":15,"endColumn":22},{"ruleId":"214","severity":1,"message":"221","line":156,"column":10,"nodeType":"216","messageId":"217","endLine":156,"endColumn":15},{"ruleId":"227","severity":1,"message":"235","line":162,"column":6,"nodeType":"229","endLine":162,"endColumn":8,"suggestions":"253"},{"ruleId":"227","severity":1,"message":"254","line":186,"column":6,"nodeType":"229","endLine":186,"endColumn":8,"suggestions":"255"},{"ruleId":"214","severity":1,"message":"256","line":1,"column":17,"nodeType":"216","messageId":"217","endLine":1,"endColumn":27},{"ruleId":"214","severity":1,"message":"257","line":1,"column":29,"nodeType":"216","messageId":"217","endLine":1,"endColumn":38},{"ruleId":"214","severity":1,"message":"258","line":2,"column":10,"nodeType":"216","messageId":"217","endLine":2,"endColumn":17},{"ruleId":"214","severity":1,"message":"259","line":3,"column":8,"nodeType":"216","messageId":"217","endLine":3,"endColumn":21},{"ruleId":"214","severity":1,"message":"260","line":4,"column":8,"nodeType":"216","messageId":"217","endLine":4,"endColumn":20},{"ruleId":"214","severity":1,"message":"221","line":55,"column":10,"nodeType":"216","messageId":"217","endLine":55,"endColumn":15},{"ruleId":"227","severity":1,"message":"235","line":61,"column":6,"nodeType":"229","endLine":61,"endColumn":8,"suggestions":"261"},{"ruleId":"227","severity":1,"message":"254","line":75,"column":6,"nodeType":"229","endLine":75,"endColumn":8,"suggestions":"262"},{"ruleId":"218","severity":1,"message":"219","line":9,"column":1,"nodeType":"220","endLine":139,"endColumn":3},{"ruleId":"214","severity":1,"message":"221","line":13,"column":10,"nodeType":"216","messageId":"217","endLine":13,"endColumn":15},{"ruleId":"227","severity":1,"message":"235","line":56,"column":6,"nodeType":"229","endLine":56,"endColumn":8,"suggestions":"263"},{"ruleId":"227","severity":1,"message":"233","line":43,"column":6,"nodeType":"229","endLine":43,"endColumn":8,"suggestions":"264"},{"ruleId":"222","severity":1,"message":"226","line":48,"column":22,"nodeType":"224","messageId":"225","endLine":48,"endColumn":24},{"ruleId":"227","severity":1,"message":"265","line":92,"column":6,"nodeType":"229","endLine":92,"endColumn":8,"suggestions":"266"},{"ruleId":"227","severity":1,"message":"267","line":113,"column":6,"nodeType":"229","endLine":113,"endColumn":16,"suggestions":"268"},{"ruleId":"227","severity":1,"message":"269","line":119,"column":6,"nodeType":"229","endLine":119,"endColumn":13,"suggestions":"270"},{"ruleId":"271","severity":1,"message":"272","line":148,"column":23,"nodeType":"249","endLine":148,"endColumn":81},{"ruleId":"218","severity":1,"message":"219","line":11,"column":1,"nodeType":"220","endLine":324,"endColumn":3},{"ruleId":"214","severity":1,"message":"221","line":80,"column":12,"nodeType":"216","messageId":"217","endLine":80,"endColumn":17},{"ruleId":"227","severity":1,"message":"235","line":87,"column":8,"nodeType":"229","endLine":87,"endColumn":10,"suggestions":"273"},{"ruleId":"227","severity":1,"message":"274","line":89,"column":15,"nodeType":"275","endLine":99,"endColumn":6},{"ruleId":"227","severity":1,"message":"254","line":119,"column":8,"nodeType":"229","endLine":119,"endColumn":10,"suggestions":"276"},{"ruleId":"222","severity":1,"message":"223","line":167,"column":62,"nodeType":"224","messageId":"225","endLine":167,"endColumn":64},{"ruleId":"218","severity":1,"message":"219","line":9,"column":1,"nodeType":"220","endLine":145,"endColumn":3},{"ruleId":"214","severity":1,"message":"221","line":14,"column":10,"nodeType":"216","messageId":"217","endLine":14,"endColumn":15},{"ruleId":"227","severity":1,"message":"235","line":57,"column":6,"nodeType":"229","endLine":57,"endColumn":8,"suggestions":"277"},{"ruleId":"227","severity":1,"message":"278","line":113,"column":7,"nodeType":"229","endLine":113,"endColumn":9,"suggestions":"279"},{"ruleId":"227","severity":1,"message":"280","line":105,"column":7,"nodeType":"229","endLine":105,"endColumn":9,"suggestions":"281"},{"ruleId":"210","replacedBy":"282"},{"ruleId":"212","replacedBy":"283"},"no-native-reassign",["284"],"no-negated-in-lhs",["285"],"no-unused-vars","'Order' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'state' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'order.phases'. Either include it or remove the dependency array.","ArrayExpression",["286"],"React Hook useEffect has missing dependencies: 'dispatch', 'id', and 'props.name'. Either include them or remove the dependency array.",["287"],"React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["288"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["289"],["290"],["291"],"'dispatch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'checkAdmin'. Either include it or remove the dependency array.",["292"],"React Hook useEffect has a missing dependency: 'updateSummary'. Either include it or remove the dependency array. If 'updateSummary' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["293"],["294"],"React Hook useEffect has a missing dependency: 'FetchOrders'. Either include it or remove the dependency array.",["295"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Navigate' is defined but never used.","'customerName' is assigned a value but never used.",["296"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["297"],"'useContext' is defined but never used.","'useEffect' is defined but never used.","'Context' is defined but never used.","'CardLineChart' is defined but never used.","'CardBarChart' is defined but never used.",["298"],["299"],["300"],["301"],"React Hook useEffect has a missing dependency: 'order_id'. Either include it or remove the dependency array.",["302"],"React Hook useEffect has a missing dependency: 'phase'. Either include it or remove the dependency array.",["303"],"React Hook useEffect has a missing dependency: 'messages'. Either include it or remove the dependency array.",["304"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener",["305"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression",["306"],["307"],"React Hook React.useEffect has missing dependencies: 'salesData.currentYear' and 'salesData.prevData'. Either include them or remove the dependency array.",["308"],"React Hook React.useEffect has missing dependencies: 'ordersData.currentYear' and 'ordersData.prevYear'. Either include them or remove the dependency array.",["309"],["284"],["285"],"no-global-assign","no-unsafe-negation",{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},{"desc":"316","fix":"317"},{"desc":"314","fix":"318"},{"desc":"316","fix":"319"},{"desc":"320","fix":"321"},{"desc":"322","fix":"323"},{"desc":"316","fix":"324"},{"desc":"325","fix":"326"},{"desc":"316","fix":"327"},{"desc":"328","fix":"329"},{"desc":"316","fix":"330"},{"desc":"328","fix":"331"},{"desc":"316","fix":"332"},{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},{"desc":"337","fix":"339"},{"desc":"316","fix":"340"},{"desc":"328","fix":"341"},{"desc":"316","fix":"342"},{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},"Update the dependencies array to be: [order.phases]",{"range":"347","text":"348"},"Update the dependencies array to be: [dispatch, id, props.name]",{"range":"349","text":"350"},"Update the dependencies array to be: [navigate, state]",{"range":"351","text":"352"},"Update the dependencies array to be: [dispatch]",{"range":"353","text":"354"},{"range":"355","text":"352"},{"range":"356","text":"354"},"Update the dependencies array to be: [checkAdmin, state]",{"range":"357","text":"358"},"Update the dependencies array to be: [orders, updateSummary]",{"range":"359","text":"360"},{"range":"361","text":"354"},"Update the dependencies array to be: [FetchOrders, page]",{"range":"362","text":"363"},{"range":"364","text":"354"},"Update the dependencies array to be: [id]",{"range":"365","text":"366"},{"range":"367","text":"354"},{"range":"368","text":"366"},{"range":"369","text":"354"},"Update the dependencies array to be: [navigate]",{"range":"370","text":"371"},"Update the dependencies array to be: [order_id]",{"range":"372","text":"373"},"Update the dependencies array to be: [messages, phase]",{"range":"374","text":"375"},{"range":"376","text":"375"},{"range":"377","text":"354"},{"range":"378","text":"366"},{"range":"379","text":"354"},"Update the dependencies array to be: [salesData.currentYear, salesData.prevData]",{"range":"380","text":"381"},"Update the dependencies array to be: [ordersData.currentYear, ordersData.prevYear]",{"range":"382","text":"383"},[3433,3435],"[order.phases]",[3717,3719],"[dispatch, id, props.name]",[1348,1355],"[navigate, state]",[1571,1573],"[dispatch]",[2138,2145],[2264,2266],[1454,1461],"[checkAdmin, state]",[2696,2704],"[orders, updateSummary]",[2826,2828],[3551,3557],"[FetchOrders, page]",[4652,4654],[5535,5537],"[id]",[1729,1731],[2120,2122],[1582,1584],[1294,1296],"[navigate]",[2589,2591],"[order_id]",[3127,3137],"[messages, phase]",[3234,3241],[2636,2638],[3679,3681],[1478,1480],[3620,3622],"[salesData.currentYear, salesData.prevData]",[3311,3313],"[ordersData.currentYear, ordersData.prevYear]"]